//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: sp_sdk.proto

package com.streamdal.protos;

@kotlin.jvm.JvmName("-initializesDKResponse")
public inline fun sDKResponse(block: com.streamdal.protos.SDKResponseKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpSdk.SDKResponse =
  com.streamdal.protos.SDKResponseKt.Dsl._create(com.streamdal.protos.SpSdk.SDKResponse.newBuilder()).apply { block() }._build()
public object SDKResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.streamdal.protos.SpSdk.SDKResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.streamdal.protos.SpSdk.SDKResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.streamdal.protos.SpSdk.SDKResponse = _builder.build()

    /**
     * <pre>
     * Contains (potentially) modified input data
     * </pre>
     *
     * <code>bytes data = 1;</code>
     */
    public var data: com.google.protobuf.ByteString
      @JvmName("getData")
      get() = _builder.getData()
      @JvmName("setData")
      set(value) {
        _builder.setData(value)
      }
    /**
     * <pre>
     * Contains (potentially) modified input data
     * </pre>
     *
     * <code>bytes data = 1;</code>
     */
    public fun clearData() {
      _builder.clearData()
    }

    /**
     * <pre>
     * Execution status of the last step
     * </pre>
     *
     * <code>.protos.ExecStatus status = 2;</code>
     */
    public var status: com.streamdal.protos.SpSdk.ExecStatus
      @JvmName("getStatus")
      get() = _builder.getStatus()
      @JvmName("setStatus")
      set(value) {
        _builder.setStatus(value)
      }
    /**
     * <pre>
     * Execution status of the last step
     * </pre>
     *
     * <code>.protos.ExecStatus status = 2;</code>
     */
    public fun clearStatus() {
      _builder.clearStatus()
    }

    /**
     * <pre>
     * Optional message accompanying the exec status for the last step
     * </pre>
     *
     * <code>optional string status_message = 3;</code>
     */
    public var statusMessage: kotlin.String
      @JvmName("getStatusMessage")
      get() = _builder.getStatusMessage()
      @JvmName("setStatusMessage")
      set(value) {
        _builder.setStatusMessage(value)
      }
    /**
     * <pre>
     * Optional message accompanying the exec status for the last step
     * </pre>
     *
     * <code>optional string status_message = 3;</code>
     */
    public fun clearStatusMessage() {
      _builder.clearStatusMessage()
    }
    /**
     * <pre>
     * Optional message accompanying the exec status for the last step
     * </pre>
     *
     * <code>optional string status_message = 3;</code>
     * @return Whether the statusMessage field is set.
     */
    public fun hasStatusMessage(): kotlin.Boolean {
      return _builder.hasStatusMessage()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class PipelineStatusProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * An array of pipelines that the SDK executed and the status of each step
     * </pre>
     *
     * <code>repeated .protos.PipelineStatus pipeline_status = 4;</code>
     */
     public val pipelineStatus: com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpSdk.PipelineStatus, PipelineStatusProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getPipelineStatusList()
      )
    /**
     * <pre>
     * An array of pipelines that the SDK executed and the status of each step
     * </pre>
     *
     * <code>repeated .protos.PipelineStatus pipeline_status = 4;</code>
     * @param value The pipelineStatus to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addPipelineStatus")
    public fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpSdk.PipelineStatus, PipelineStatusProxy>.add(value: com.streamdal.protos.SpSdk.PipelineStatus) {
      _builder.addPipelineStatus(value)
    }
    /**
     * <pre>
     * An array of pipelines that the SDK executed and the status of each step
     * </pre>
     *
     * <code>repeated .protos.PipelineStatus pipeline_status = 4;</code>
     * @param value The pipelineStatus to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignPipelineStatus")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpSdk.PipelineStatus, PipelineStatusProxy>.plusAssign(value: com.streamdal.protos.SpSdk.PipelineStatus) {
      add(value)
    }
    /**
     * <pre>
     * An array of pipelines that the SDK executed and the status of each step
     * </pre>
     *
     * <code>repeated .protos.PipelineStatus pipeline_status = 4;</code>
     * @param values The pipelineStatus to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllPipelineStatus")
    public fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpSdk.PipelineStatus, PipelineStatusProxy>.addAll(values: kotlin.collections.Iterable<com.streamdal.protos.SpSdk.PipelineStatus>) {
      _builder.addAllPipelineStatus(values)
    }
    /**
     * <pre>
     * An array of pipelines that the SDK executed and the status of each step
     * </pre>
     *
     * <code>repeated .protos.PipelineStatus pipeline_status = 4;</code>
     * @param values The pipelineStatus to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllPipelineStatus")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpSdk.PipelineStatus, PipelineStatusProxy>.plusAssign(values: kotlin.collections.Iterable<com.streamdal.protos.SpSdk.PipelineStatus>) {
      addAll(values)
    }
    /**
     * <pre>
     * An array of pipelines that the SDK executed and the status of each step
     * </pre>
     *
     * <code>repeated .protos.PipelineStatus pipeline_status = 4;</code>
     * @param index The index to set the value at.
     * @param value The pipelineStatus to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setPipelineStatus")
    public operator fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpSdk.PipelineStatus, PipelineStatusProxy>.set(index: kotlin.Int, value: com.streamdal.protos.SpSdk.PipelineStatus) {
      _builder.setPipelineStatus(index, value)
    }
    /**
     * <pre>
     * An array of pipelines that the SDK executed and the status of each step
     * </pre>
     *
     * <code>repeated .protos.PipelineStatus pipeline_status = 4;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearPipelineStatus")
    public fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpSdk.PipelineStatus, PipelineStatusProxy>.clear() {
      _builder.clearPipelineStatus()
    }


    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class MetadataProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * Includes any metadata that the step(s) may want to pass back to the user.
     * NOTE: Metadata is aggregated across all steps in the pipeline, so if two
     * steps both set a key "foo" to different values, the value of "foo" in the
     * response will be the value set by the last step in the pipeline.
     * To learn more about "metadata", see SDK Spec V2 doc "Pipeline Step &amp; Error
     * Behavior" section.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 5;</code>
     */
     public val metadata: com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, MetadataProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getMetadataMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getMetadataMap()
      )
    /**
     * <pre>
     * Includes any metadata that the step(s) may want to pass back to the user.
     * NOTE: Metadata is aggregated across all steps in the pipeline, so if two
     * steps both set a key "foo" to different values, the value of "foo" in the
     * response will be the value set by the last step in the pipeline.
     * To learn more about "metadata", see SDK Spec V2 doc "Pipeline Step &amp; Error
     * Behavior" section.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 5;</code>
     */
    @JvmName("putMetadata")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, MetadataProxy>
      .put(key: kotlin.String, value: kotlin.String) {
         _builder.putMetadata(key, value)
       }
    /**
     * <pre>
     * Includes any metadata that the step(s) may want to pass back to the user.
     * NOTE: Metadata is aggregated across all steps in the pipeline, so if two
     * steps both set a key "foo" to different values, the value of "foo" in the
     * response will be the value set by the last step in the pipeline.
     * To learn more about "metadata", see SDK Spec V2 doc "Pipeline Step &amp; Error
     * Behavior" section.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 5;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setMetadata")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, MetadataProxy>
      .set(key: kotlin.String, value: kotlin.String) {
         put(key, value)
       }
    /**
     * <pre>
     * Includes any metadata that the step(s) may want to pass back to the user.
     * NOTE: Metadata is aggregated across all steps in the pipeline, so if two
     * steps both set a key "foo" to different values, the value of "foo" in the
     * response will be the value set by the last step in the pipeline.
     * To learn more about "metadata", see SDK Spec V2 doc "Pipeline Step &amp; Error
     * Behavior" section.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 5;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeMetadata")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, MetadataProxy>
      .remove(key: kotlin.String) {
         _builder.removeMetadata(key)
       }
    /**
     * <pre>
     * Includes any metadata that the step(s) may want to pass back to the user.
     * NOTE: Metadata is aggregated across all steps in the pipeline, so if two
     * steps both set a key "foo" to different values, the value of "foo" in the
     * response will be the value set by the last step in the pipeline.
     * To learn more about "metadata", see SDK Spec V2 doc "Pipeline Step &amp; Error
     * Behavior" section.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 5;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllMetadata")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, MetadataProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, kotlin.String>) {
         _builder.putAllMetadata(map)
       }
    /**
     * <pre>
     * Includes any metadata that the step(s) may want to pass back to the user.
     * NOTE: Metadata is aggregated across all steps in the pipeline, so if two
     * steps both set a key "foo" to different values, the value of "foo" in the
     * response will be the value set by the last step in the pipeline.
     * To learn more about "metadata", see SDK Spec V2 doc "Pipeline Step &amp; Error
     * Behavior" section.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 5;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearMetadata")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, MetadataProxy>
      .clear() {
         _builder.clearMetadata()
       }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.streamdal.protos.SpSdk.SDKResponse.copy(block: com.streamdal.protos.SDKResponseKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpSdk.SDKResponse =
  com.streamdal.protos.SDKResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

