//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: sp_wsm.proto

package com.streamdal.protos;

@kotlin.jvm.JvmName("-initializeinterStepResult")
public inline fun interStepResult(block: com.streamdal.protos.InterStepResultKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpWsm.InterStepResult =
  com.streamdal.protos.InterStepResultKt.Dsl._create(com.streamdal.protos.SpWsm.InterStepResult.newBuilder()).apply { block() }._build()
public object InterStepResultKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.streamdal.protos.SpWsm.InterStepResult.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.streamdal.protos.SpWsm.InterStepResult.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.streamdal.protos.SpWsm.InterStepResult = _builder.build()

    /**
     * <code>.protos.steps.DetectiveStepResult detective_result = 1;</code>
     */
    public var detectiveResult: com.streamdal.protos.steps.SpStepsDetective.DetectiveStepResult
      @JvmName("getDetectiveResult")
      get() = _builder.getDetectiveResult()
      @JvmName("setDetectiveResult")
      set(value) {
        _builder.setDetectiveResult(value)
      }
    /**
     * <code>.protos.steps.DetectiveStepResult detective_result = 1;</code>
     */
    public fun clearDetectiveResult() {
      _builder.clearDetectiveResult()
    }
    /**
     * <code>.protos.steps.DetectiveStepResult detective_result = 1;</code>
     * @return Whether the detectiveResult field is set.
     */
    public fun hasDetectiveResult(): kotlin.Boolean {
      return _builder.hasDetectiveResult()
    }
    public val inputFromCase: com.streamdal.protos.SpWsm.InterStepResult.InputFromCase
      @JvmName("getInputFromCase")
      get() = _builder.getInputFromCase()

    public fun clearInputFrom() {
      _builder.clearInputFrom()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.streamdal.protos.SpWsm.InterStepResult.copy(block: com.streamdal.protos.InterStepResultKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpWsm.InterStepResult =
  com.streamdal.protos.InterStepResultKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.streamdal.protos.SpWsm.InterStepResultOrBuilder.detectiveResultOrNull: com.streamdal.protos.steps.SpStepsDetective.DetectiveStepResult?
  get() = if (hasDetectiveResult()) getDetectiveResult() else null

