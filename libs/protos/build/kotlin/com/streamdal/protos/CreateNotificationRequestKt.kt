//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: sp_external.proto

package com.streamdal.protos;

@kotlin.jvm.JvmName("-initializecreateNotificationRequest")
public inline fun createNotificationRequest(block: com.streamdal.protos.CreateNotificationRequestKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpExternal.CreateNotificationRequest =
  com.streamdal.protos.CreateNotificationRequestKt.Dsl._create(com.streamdal.protos.SpExternal.CreateNotificationRequest.newBuilder()).apply { block() }._build()
public object CreateNotificationRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.streamdal.protos.SpExternal.CreateNotificationRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.streamdal.protos.SpExternal.CreateNotificationRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.streamdal.protos.SpExternal.CreateNotificationRequest = _builder.build()

    /**
     * <code>.protos.NotificationConfig notification = 1;</code>
     */
    public var notification: com.streamdal.protos.SpNotify.NotificationConfig
      @JvmName("getNotification")
      get() = _builder.getNotification()
      @JvmName("setNotification")
      set(value) {
        _builder.setNotification(value)
      }
    /**
     * <code>.protos.NotificationConfig notification = 1;</code>
     */
    public fun clearNotification() {
      _builder.clearNotification()
    }
    /**
     * <code>.protos.NotificationConfig notification = 1;</code>
     * @return Whether the notification field is set.
     */
    public fun hasNotification(): kotlin.Boolean {
      return _builder.hasNotification()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.streamdal.protos.SpExternal.CreateNotificationRequest.copy(block: com.streamdal.protos.CreateNotificationRequestKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpExternal.CreateNotificationRequest =
  com.streamdal.protos.CreateNotificationRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.streamdal.protos.SpExternal.CreateNotificationRequestOrBuilder.notificationOrNull: com.streamdal.protos.SpNotify.NotificationConfig?
  get() = if (hasNotification()) getNotification() else null

