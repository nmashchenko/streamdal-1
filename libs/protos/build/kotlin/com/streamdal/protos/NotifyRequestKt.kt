//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: sp_internal.proto

package com.streamdal.protos;

@kotlin.jvm.JvmName("-initializenotifyRequest")
public inline fun notifyRequest(block: com.streamdal.protos.NotifyRequestKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpInternal.NotifyRequest =
  com.streamdal.protos.NotifyRequestKt.Dsl._create(com.streamdal.protos.SpInternal.NotifyRequest.newBuilder()).apply { block() }._build()
public object NotifyRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.streamdal.protos.SpInternal.NotifyRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.streamdal.protos.SpInternal.NotifyRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.streamdal.protos.SpInternal.NotifyRequest = _builder.build()

    /**
     * <code>.protos.NotifyRequest.ConditionType condition_type = 1;</code>
     */
    public var conditionType: com.streamdal.protos.SpInternal.NotifyRequest.ConditionType
      @JvmName("getConditionType")
      get() = _builder.getConditionType()
      @JvmName("setConditionType")
      set(value) {
        _builder.setConditionType(value)
      }
    /**
     * <code>.protos.NotifyRequest.ConditionType condition_type = 1;</code>
     */
    public fun clearConditionType() {
      _builder.clearConditionType()
    }

    /**
     * <pre>
     * Used for pulling step name and any other info needed in the future
     * </pre>
     *
     * <code>.protos.PipelineStep step = 2;</code>
     */
    public var step: com.streamdal.protos.SpPipeline.PipelineStep
      @JvmName("getStep")
      get() = _builder.getStep()
      @JvmName("setStep")
      set(value) {
        _builder.setStep(value)
      }
    /**
     * <pre>
     * Used for pulling step name and any other info needed in the future
     * </pre>
     *
     * <code>.protos.PipelineStep step = 2;</code>
     */
    public fun clearStep() {
      _builder.clearStep()
    }
    /**
     * <pre>
     * Used for pulling step name and any other info needed in the future
     * </pre>
     *
     * <code>.protos.PipelineStep step = 2;</code>
     * @return Whether the step field is set.
     */
    public fun hasStep(): kotlin.Boolean {
      return _builder.hasStep()
    }

    /**
     * <pre>
     * Included in notification
     * </pre>
     *
     * <code>.protos.Audience audience = 3;</code>
     */
    public var audience: com.streamdal.protos.SpCommon.Audience
      @JvmName("getAudience")
      get() = _builder.getAudience()
      @JvmName("setAudience")
      set(value) {
        _builder.setAudience(value)
      }
    /**
     * <pre>
     * Included in notification
     * </pre>
     *
     * <code>.protos.Audience audience = 3;</code>
     */
    public fun clearAudience() {
      _builder.clearAudience()
    }
    /**
     * <pre>
     * Included in notification
     * </pre>
     *
     * <code>.protos.Audience audience = 3;</code>
     * @return Whether the audience field is set.
     */
    public fun hasAudience(): kotlin.Boolean {
      return _builder.hasAudience()
    }

    /**
     * <pre>
     * Included in notification
     * </pre>
     *
     * <code>int64 occurred_at_unix_ts_utc = 4;</code>
     */
    public var occurredAtUnixTsUtc: kotlin.Long
      @JvmName("getOccurredAtUnixTsUtc")
      get() = _builder.getOccurredAtUnixTsUtc()
      @JvmName("setOccurredAtUnixTsUtc")
      set(value) {
        _builder.setOccurredAtUnixTsUtc(value)
      }
    /**
     * <pre>
     * Included in notification
     * </pre>
     *
     * <code>int64 occurred_at_unix_ts_utc = 4;</code>
     */
    public fun clearOccurredAtUnixTsUtc() {
      _builder.clearOccurredAtUnixTsUtc()
    }

    /**
     * <pre>
     * Included in notification
     * </pre>
     *
     * <code>string pipeline_id = 5;</code>
     */
    public var pipelineId: kotlin.String
      @JvmName("getPipelineId")
      get() = _builder.getPipelineId()
      @JvmName("setPipelineId")
      set(value) {
        _builder.setPipelineId(value)
      }
    /**
     * <pre>
     * Included in notification
     * </pre>
     *
     * <code>string pipeline_id = 5;</code>
     */
    public fun clearPipelineId() {
      _builder.clearPipelineId()
    }

    /**
     * <pre>
     * Included in notification
     * </pre>
     *
     * <code>bytes payload = 6;</code>
     */
    public var payload: com.google.protobuf.ByteString
      @JvmName("getPayload")
      get() = _builder.getPayload()
      @JvmName("setPayload")
      set(value) {
        _builder.setPayload(value)
      }
    /**
     * <pre>
     * Included in notification
     * </pre>
     *
     * <code>bytes payload = 6;</code>
     */
    public fun clearPayload() {
      _builder.clearPayload()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.streamdal.protos.SpInternal.NotifyRequest.copy(block: com.streamdal.protos.NotifyRequestKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpInternal.NotifyRequest =
  com.streamdal.protos.NotifyRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.streamdal.protos.SpInternal.NotifyRequestOrBuilder.stepOrNull: com.streamdal.protos.SpPipeline.PipelineStep?
  get() = if (hasStep()) getStep() else null

public val com.streamdal.protos.SpInternal.NotifyRequestOrBuilder.audienceOrNull: com.streamdal.protos.SpCommon.Audience?
  get() = if (hasAudience()) getAudience() else null

