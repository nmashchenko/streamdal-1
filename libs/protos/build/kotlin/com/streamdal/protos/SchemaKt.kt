//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: sp_common.proto

package com.streamdal.protos;

@kotlin.jvm.JvmName("-initializeschema")
public inline fun schema(block: com.streamdal.protos.SchemaKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpCommon.Schema =
  com.streamdal.protos.SchemaKt.Dsl._create(com.streamdal.protos.SpCommon.Schema.newBuilder()).apply { block() }._build()
public object SchemaKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.streamdal.protos.SpCommon.Schema.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.streamdal.protos.SpCommon.Schema.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.streamdal.protos.SpCommon.Schema = _builder.build()

    /**
     * <code>bytes json_schema = 1;</code>
     */
    public var jsonSchema: com.google.protobuf.ByteString
      @JvmName("getJsonSchema")
      get() = _builder.getJsonSchema()
      @JvmName("setJsonSchema")
      set(value) {
        _builder.setJsonSchema(value)
      }
    /**
     * <code>bytes json_schema = 1;</code>
     */
    public fun clearJsonSchema() {
      _builder.clearJsonSchema()
    }

    /**
     * <pre>
     * protolint:disable:this FIELD_NAMES_LOWER_SNAKE_CASE
     * </pre>
     *
     * <code>int32 _version = 100;</code>
     */
    public var Version: kotlin.Int
      @JvmName("getVersion")
      get() = _builder.getVersion()
      @JvmName("setVersion")
      set(value) {
        _builder.setVersion(value)
      }
    /**
     * <pre>
     * protolint:disable:this FIELD_NAMES_LOWER_SNAKE_CASE
     * </pre>
     *
     * <code>int32 _version = 100;</code>
     */
    public fun clearVersion() {
      _builder.clearVersion()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class MetadataProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * protolint:disable:this FIELD_NAMES_LOWER_SNAKE_CASE
     * </pre>
     *
     * <code>map&lt;string, string&gt; _metadata = 1000;</code>
     */
     public val Metadata: com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, MetadataProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getMetadataMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getMetadataMap()
      )
    /**
     * <pre>
     * protolint:disable:this FIELD_NAMES_LOWER_SNAKE_CASE
     * </pre>
     *
     * <code>map&lt;string, string&gt; _metadata = 1000;</code>
     */
    @JvmName("putMetadata")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, MetadataProxy>
      .put(key: kotlin.String, value: kotlin.String) {
         _builder.putMetadata(key, value)
       }
    /**
     * <pre>
     * protolint:disable:this FIELD_NAMES_LOWER_SNAKE_CASE
     * </pre>
     *
     * <code>map&lt;string, string&gt; _metadata = 1000;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setMetadata")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, MetadataProxy>
      .set(key: kotlin.String, value: kotlin.String) {
         put(key, value)
       }
    /**
     * <pre>
     * protolint:disable:this FIELD_NAMES_LOWER_SNAKE_CASE
     * </pre>
     *
     * <code>map&lt;string, string&gt; _metadata = 1000;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeMetadata")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, MetadataProxy>
      .remove(key: kotlin.String) {
         _builder.removeMetadata(key)
       }
    /**
     * <pre>
     * protolint:disable:this FIELD_NAMES_LOWER_SNAKE_CASE
     * </pre>
     *
     * <code>map&lt;string, string&gt; _metadata = 1000;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllMetadata")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, MetadataProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, kotlin.String>) {
         _builder.putAllMetadata(map)
       }
    /**
     * <pre>
     * protolint:disable:this FIELD_NAMES_LOWER_SNAKE_CASE
     * </pre>
     *
     * <code>map&lt;string, string&gt; _metadata = 1000;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearMetadata")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, MetadataProxy>
      .clear() {
         _builder.clearMetadata()
       }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.streamdal.protos.SpCommon.Schema.copy(block: com.streamdal.protos.SchemaKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpCommon.Schema =
  com.streamdal.protos.SchemaKt.Dsl._create(this.toBuilder()).apply { block() }._build()

