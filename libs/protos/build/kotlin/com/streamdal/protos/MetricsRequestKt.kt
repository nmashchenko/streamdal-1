//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: sp_internal.proto

package com.streamdal.protos;

@kotlin.jvm.JvmName("-initializemetricsRequest")
public inline fun metricsRequest(block: com.streamdal.protos.MetricsRequestKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpInternal.MetricsRequest =
  com.streamdal.protos.MetricsRequestKt.Dsl._create(com.streamdal.protos.SpInternal.MetricsRequest.newBuilder()).apply { block() }._build()
public object MetricsRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.streamdal.protos.SpInternal.MetricsRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.streamdal.protos.SpInternal.MetricsRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.streamdal.protos.SpInternal.MetricsRequest = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class MetricsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .protos.Metric metrics = 1;</code>
     */
     public val metrics: com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpCommon.Metric, MetricsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getMetricsList()
      )
    /**
     * <code>repeated .protos.Metric metrics = 1;</code>
     * @param value The metrics to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addMetrics")
    public fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpCommon.Metric, MetricsProxy>.add(value: com.streamdal.protos.SpCommon.Metric) {
      _builder.addMetrics(value)
    }
    /**
     * <code>repeated .protos.Metric metrics = 1;</code>
     * @param value The metrics to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignMetrics")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpCommon.Metric, MetricsProxy>.plusAssign(value: com.streamdal.protos.SpCommon.Metric) {
      add(value)
    }
    /**
     * <code>repeated .protos.Metric metrics = 1;</code>
     * @param values The metrics to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllMetrics")
    public fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpCommon.Metric, MetricsProxy>.addAll(values: kotlin.collections.Iterable<com.streamdal.protos.SpCommon.Metric>) {
      _builder.addAllMetrics(values)
    }
    /**
     * <code>repeated .protos.Metric metrics = 1;</code>
     * @param values The metrics to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllMetrics")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpCommon.Metric, MetricsProxy>.plusAssign(values: kotlin.collections.Iterable<com.streamdal.protos.SpCommon.Metric>) {
      addAll(values)
    }
    /**
     * <code>repeated .protos.Metric metrics = 1;</code>
     * @param index The index to set the value at.
     * @param value The metrics to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setMetrics")
    public operator fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpCommon.Metric, MetricsProxy>.set(index: kotlin.Int, value: com.streamdal.protos.SpCommon.Metric) {
      _builder.setMetrics(index, value)
    }
    /**
     * <code>repeated .protos.Metric metrics = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearMetrics")
    public fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpCommon.Metric, MetricsProxy>.clear() {
      _builder.clearMetrics()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.streamdal.protos.SpInternal.MetricsRequest.copy(block: com.streamdal.protos.MetricsRequestKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpInternal.MetricsRequest =
  com.streamdal.protos.MetricsRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

