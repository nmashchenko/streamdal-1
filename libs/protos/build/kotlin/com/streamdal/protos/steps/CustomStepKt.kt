//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: steps/sp_steps_custom.proto

package com.streamdal.protos.steps;

@kotlin.jvm.JvmName("-initializecustomStep")
public inline fun customStep(block: com.streamdal.protos.steps.CustomStepKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.steps.SpStepsCustom.CustomStep =
  com.streamdal.protos.steps.CustomStepKt.Dsl._create(com.streamdal.protos.steps.SpStepsCustom.CustomStep.newBuilder()).apply { block() }._build()
public object CustomStepKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.streamdal.protos.steps.SpStepsCustom.CustomStep.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.streamdal.protos.steps.SpStepsCustom.CustomStep.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.streamdal.protos.steps.SpStepsCustom.CustomStep = _builder.build()

    /**
     * <code>string id = 1;</code>
     */
    public var id: kotlin.String
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * <code>string id = 1;</code>
     */
    public fun clearId() {
      _builder.clearId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.streamdal.protos.steps.SpStepsCustom.CustomStep.copy(block: com.streamdal.protos.steps.CustomStepKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.steps.SpStepsCustom.CustomStep =
  com.streamdal.protos.steps.CustomStepKt.Dsl._create(this.toBuilder()).apply { block() }._build()

