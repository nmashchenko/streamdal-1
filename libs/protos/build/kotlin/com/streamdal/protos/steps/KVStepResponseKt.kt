//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: steps/sp_steps_kv.proto

package com.streamdal.protos.steps;

@kotlin.jvm.JvmName("-initializekVStepResponse")
public inline fun kVStepResponse(block: com.streamdal.protos.steps.KVStepResponseKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.steps.SpStepsKv.KVStepResponse =
  com.streamdal.protos.steps.KVStepResponseKt.Dsl._create(com.streamdal.protos.steps.SpStepsKv.KVStepResponse.newBuilder()).apply { block() }._build()
public object KVStepResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.streamdal.protos.steps.SpStepsKv.KVStepResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.streamdal.protos.steps.SpStepsKv.KVStepResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.streamdal.protos.steps.SpStepsKv.KVStepResponse = _builder.build()

    /**
     * <pre>
     * Status of the action; interpreted by KV WASM to so it can generate a protos.WASMResponse
     * </pre>
     *
     * <code>.protos.steps.KVStatus status = 1;</code>
     */
    public var status: com.streamdal.protos.steps.SpStepsKv.KVStatus
      @JvmName("getStatus")
      get() = _builder.getStatus()
      @JvmName("setStatus")
      set(value) {
        _builder.setStatus(value)
      }
    /**
     * <pre>
     * Status of the action; interpreted by KV WASM to so it can generate a protos.WASMResponse
     * </pre>
     *
     * <code>.protos.steps.KVStatus status = 1;</code>
     */
    public fun clearStatus() {
      _builder.clearStatus()
    }

    /**
     * <pre>
     * Message containing info, debug or error details; included in protos.WASMResponse
     * </pre>
     *
     * <code>string message = 2;</code>
     */
    public var message: kotlin.String
      @JvmName("getMessage")
      get() = _builder.getMessage()
      @JvmName("setMessage")
      set(value) {
        _builder.setMessage(value)
      }
    /**
     * <pre>
     * Message containing info, debug or error details; included in protos.WASMResponse
     * </pre>
     *
     * <code>string message = 2;</code>
     */
    public fun clearMessage() {
      _builder.clearMessage()
    }

    /**
     * <pre>
     * Optional because the only action that uses field is KV_ACTION_GET
     * DS: Not sure how we'll use KV_ACTION_GET in steps yet but this is probably
     * a good place to start. 09.06.2023.
     * </pre>
     *
     * <code>optional bytes value = 3;</code>
     */
    public var value: com.google.protobuf.ByteString
      @JvmName("getValue")
      get() = _builder.getValue()
      @JvmName("setValue")
      set(value) {
        _builder.setValue(value)
      }
    /**
     * <pre>
     * Optional because the only action that uses field is KV_ACTION_GET
     * DS: Not sure how we'll use KV_ACTION_GET in steps yet but this is probably
     * a good place to start. 09.06.2023.
     * </pre>
     *
     * <code>optional bytes value = 3;</code>
     */
    public fun clearValue() {
      _builder.clearValue()
    }
    /**
     * <pre>
     * Optional because the only action that uses field is KV_ACTION_GET
     * DS: Not sure how we'll use KV_ACTION_GET in steps yet but this is probably
     * a good place to start. 09.06.2023.
     * </pre>
     *
     * <code>optional bytes value = 3;</code>
     * @return Whether the value field is set.
     */
    public fun hasValue(): kotlin.Boolean {
      return _builder.hasValue()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.streamdal.protos.steps.SpStepsKv.KVStepResponse.copy(block: com.streamdal.protos.steps.KVStepResponseKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.steps.SpStepsKv.KVStepResponse =
  com.streamdal.protos.steps.KVStepResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

