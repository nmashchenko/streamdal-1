//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: steps/sp_steps_httprequest.proto

package com.streamdal.protos.steps;

@kotlin.jvm.JvmName("-initializehttpRequestStep")
public inline fun httpRequestStep(block: com.streamdal.protos.steps.HttpRequestStepKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.steps.SpStepsHttprequest.HttpRequestStep =
  com.streamdal.protos.steps.HttpRequestStepKt.Dsl._create(com.streamdal.protos.steps.SpStepsHttprequest.HttpRequestStep.newBuilder()).apply { block() }._build()
public object HttpRequestStepKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.streamdal.protos.steps.SpStepsHttprequest.HttpRequestStep.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.streamdal.protos.steps.SpStepsHttprequest.HttpRequestStep.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.streamdal.protos.steps.SpStepsHttprequest.HttpRequestStep = _builder.build()

    /**
     * <code>.protos.steps.HttpRequest request = 1;</code>
     */
    public var request: com.streamdal.protos.steps.SpStepsHttprequest.HttpRequest
      @JvmName("getRequest")
      get() = _builder.getRequest()
      @JvmName("setRequest")
      set(value) {
        _builder.setRequest(value)
      }
    /**
     * <code>.protos.steps.HttpRequest request = 1;</code>
     */
    public fun clearRequest() {
      _builder.clearRequest()
    }
    /**
     * <code>.protos.steps.HttpRequest request = 1;</code>
     * @return Whether the request field is set.
     */
    public fun hasRequest(): kotlin.Boolean {
      return _builder.hasRequest()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.streamdal.protos.steps.SpStepsHttprequest.HttpRequestStep.copy(block: com.streamdal.protos.steps.HttpRequestStepKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.steps.SpStepsHttprequest.HttpRequestStep =
  com.streamdal.protos.steps.HttpRequestStepKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.streamdal.protos.steps.SpStepsHttprequest.HttpRequestStepOrBuilder.requestOrNull: com.streamdal.protos.steps.SpStepsHttprequest.HttpRequest?
  get() = if (hasRequest()) getRequest() else null

