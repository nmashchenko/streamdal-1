//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: sp_external.proto

package com.streamdal.protos;

@kotlin.jvm.JvmName("-initializegetNotificationsResponse")
public inline fun getNotificationsResponse(block: com.streamdal.protos.GetNotificationsResponseKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpExternal.GetNotificationsResponse =
  com.streamdal.protos.GetNotificationsResponseKt.Dsl._create(com.streamdal.protos.SpExternal.GetNotificationsResponse.newBuilder()).apply { block() }._build()
public object GetNotificationsResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.streamdal.protos.SpExternal.GetNotificationsResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.streamdal.protos.SpExternal.GetNotificationsResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.streamdal.protos.SpExternal.GetNotificationsResponse = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class NotificationsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * Key == id of the notification config
     * </pre>
     *
     * <code>map&lt;string, .protos.NotificationConfig&gt; notifications = 1;</code>
     */
     public val notifications: com.google.protobuf.kotlin.DslMap<kotlin.String, com.streamdal.protos.SpNotify.NotificationConfig, NotificationsProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getNotificationsMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getNotificationsMap()
      )
    /**
     * <pre>
     * Key == id of the notification config
     * </pre>
     *
     * <code>map&lt;string, .protos.NotificationConfig&gt; notifications = 1;</code>
     */
    @JvmName("putNotifications")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.streamdal.protos.SpNotify.NotificationConfig, NotificationsProxy>
      .put(key: kotlin.String, value: com.streamdal.protos.SpNotify.NotificationConfig) {
         _builder.putNotifications(key, value)
       }
    /**
     * <pre>
     * Key == id of the notification config
     * </pre>
     *
     * <code>map&lt;string, .protos.NotificationConfig&gt; notifications = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setNotifications")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.streamdal.protos.SpNotify.NotificationConfig, NotificationsProxy>
      .set(key: kotlin.String, value: com.streamdal.protos.SpNotify.NotificationConfig) {
         put(key, value)
       }
    /**
     * <pre>
     * Key == id of the notification config
     * </pre>
     *
     * <code>map&lt;string, .protos.NotificationConfig&gt; notifications = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeNotifications")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.streamdal.protos.SpNotify.NotificationConfig, NotificationsProxy>
      .remove(key: kotlin.String) {
         _builder.removeNotifications(key)
       }
    /**
     * <pre>
     * Key == id of the notification config
     * </pre>
     *
     * <code>map&lt;string, .protos.NotificationConfig&gt; notifications = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllNotifications")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.streamdal.protos.SpNotify.NotificationConfig, NotificationsProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, com.streamdal.protos.SpNotify.NotificationConfig>) {
         _builder.putAllNotifications(map)
       }
    /**
     * <pre>
     * Key == id of the notification config
     * </pre>
     *
     * <code>map&lt;string, .protos.NotificationConfig&gt; notifications = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearNotifications")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.streamdal.protos.SpNotify.NotificationConfig, NotificationsProxy>
      .clear() {
         _builder.clearNotifications()
       }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.streamdal.protos.SpExternal.GetNotificationsResponse.copy(block: com.streamdal.protos.GetNotificationsResponseKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpExternal.GetNotificationsResponse =
  com.streamdal.protos.GetNotificationsResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

