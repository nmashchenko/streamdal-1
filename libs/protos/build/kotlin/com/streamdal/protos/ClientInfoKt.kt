//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: sp_info.proto

package com.streamdal.protos;

@kotlin.jvm.JvmName("-initializeclientInfo")
public inline fun clientInfo(block: com.streamdal.protos.ClientInfoKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpInfo.ClientInfo =
  com.streamdal.protos.ClientInfoKt.Dsl._create(com.streamdal.protos.SpInfo.ClientInfo.newBuilder()).apply { block() }._build()
public object ClientInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.streamdal.protos.SpInfo.ClientInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.streamdal.protos.SpInfo.ClientInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.streamdal.protos.SpInfo.ClientInfo = _builder.build()

    /**
     * <code>.protos.ClientType client_type = 1;</code>
     */
    public var clientType: com.streamdal.protos.SpInfo.ClientType
      @JvmName("getClientType")
      get() = _builder.getClientType()
      @JvmName("setClientType")
      set(value) {
        _builder.setClientType(value)
      }
    /**
     * <code>.protos.ClientType client_type = 1;</code>
     */
    public fun clearClientType() {
      _builder.clearClientType()
    }

    /**
     * <code>string library_name = 2;</code>
     */
    public var libraryName: kotlin.String
      @JvmName("getLibraryName")
      get() = _builder.getLibraryName()
      @JvmName("setLibraryName")
      set(value) {
        _builder.setLibraryName(value)
      }
    /**
     * <code>string library_name = 2;</code>
     */
    public fun clearLibraryName() {
      _builder.clearLibraryName()
    }

    /**
     * <code>string library_version = 3;</code>
     */
    public var libraryVersion: kotlin.String
      @JvmName("getLibraryVersion")
      get() = _builder.getLibraryVersion()
      @JvmName("setLibraryVersion")
      set(value) {
        _builder.setLibraryVersion(value)
      }
    /**
     * <code>string library_version = 3;</code>
     */
    public fun clearLibraryVersion() {
      _builder.clearLibraryVersion()
    }

    /**
     * <code>string language = 4;</code>
     */
    public var language: kotlin.String
      @JvmName("getLanguage")
      get() = _builder.getLanguage()
      @JvmName("setLanguage")
      set(value) {
        _builder.setLanguage(value)
      }
    /**
     * <code>string language = 4;</code>
     */
    public fun clearLanguage() {
      _builder.clearLanguage()
    }

    /**
     * <code>string arch = 5;</code>
     */
    public var arch: kotlin.String
      @JvmName("getArch")
      get() = _builder.getArch()
      @JvmName("setArch")
      set(value) {
        _builder.setArch(value)
      }
    /**
     * <code>string arch = 5;</code>
     */
    public fun clearArch() {
      _builder.clearArch()
    }

    /**
     * <code>string os = 6;</code>
     */
    public var os: kotlin.String
      @JvmName("getOs")
      get() = _builder.getOs()
      @JvmName("setOs")
      set(value) {
        _builder.setOs(value)
      }
    /**
     * <code>string os = 6;</code>
     */
    public fun clearOs() {
      _builder.clearOs()
    }

    /**
     * <pre>
     * Filled out by server on GetAll()
     * </pre>
     *
     * <code>optional string _session_id = 7;</code>
     */
    public var SessionId: kotlin.String
      @JvmName("getSessionId")
      get() = _builder.getSessionId()
      @JvmName("setSessionId")
      set(value) {
        _builder.setSessionId(value)
      }
    /**
     * <pre>
     * Filled out by server on GetAll()
     * </pre>
     *
     * <code>optional string _session_id = 7;</code>
     */
    public fun clearSessionId() {
      _builder.clearSessionId()
    }
    /**
     * <pre>
     * Filled out by server on GetAll()
     * </pre>
     *
     * <code>optional string _session_id = 7;</code>
     * @return Whether the sessionId field is set.
     */
    public fun hasSessionId(): kotlin.Boolean {
      return _builder.hasSessionId()
    }

    /**
     * <pre>
     * protolint:disable:this FIELD_NAMES_LOWER_SNAKE_CASE
     * </pre>
     *
     * <code>optional string _service_name = 8;</code>
     */
    public var ServiceName: kotlin.String
      @JvmName("getServiceName")
      get() = _builder.getServiceName()
      @JvmName("setServiceName")
      set(value) {
        _builder.setServiceName(value)
      }
    /**
     * <pre>
     * protolint:disable:this FIELD_NAMES_LOWER_SNAKE_CASE
     * </pre>
     *
     * <code>optional string _service_name = 8;</code>
     */
    public fun clearServiceName() {
      _builder.clearServiceName()
    }
    /**
     * <pre>
     * protolint:disable:this FIELD_NAMES_LOWER_SNAKE_CASE
     * </pre>
     *
     * <code>optional string _service_name = 8;</code>
     * @return Whether the serviceName field is set.
     */
    public fun hasServiceName(): kotlin.Boolean {
      return _builder.hasServiceName()
    }

    /**
     * <pre>
     * protolint:disable:this FIELD_NAMES_LOWER_SNAKE_CASE
     * </pre>
     *
     * <code>optional string _node_name = 9;</code>
     */
    public var NodeName: kotlin.String
      @JvmName("getNodeName")
      get() = _builder.getNodeName()
      @JvmName("setNodeName")
      set(value) {
        _builder.setNodeName(value)
      }
    /**
     * <pre>
     * protolint:disable:this FIELD_NAMES_LOWER_SNAKE_CASE
     * </pre>
     *
     * <code>optional string _node_name = 9;</code>
     */
    public fun clearNodeName() {
      _builder.clearNodeName()
    }
    /**
     * <pre>
     * protolint:disable:this FIELD_NAMES_LOWER_SNAKE_CASE
     * </pre>
     *
     * <code>optional string _node_name = 9;</code>
     * @return Whether the nodeName field is set.
     */
    public fun hasNodeName(): kotlin.Boolean {
      return _builder.hasNodeName()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.streamdal.protos.SpInfo.ClientInfo.copy(block: com.streamdal.protos.ClientInfoKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpInfo.ClientInfo =
  com.streamdal.protos.ClientInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

