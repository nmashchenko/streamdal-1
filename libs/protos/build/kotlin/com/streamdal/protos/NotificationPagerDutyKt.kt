//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: sp_notify.proto

package com.streamdal.protos;

@kotlin.jvm.JvmName("-initializenotificationPagerDuty")
public inline fun notificationPagerDuty(block: com.streamdal.protos.NotificationPagerDutyKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpNotify.NotificationPagerDuty =
  com.streamdal.protos.NotificationPagerDutyKt.Dsl._create(com.streamdal.protos.SpNotify.NotificationPagerDuty.newBuilder()).apply { block() }._build()
public object NotificationPagerDutyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.streamdal.protos.SpNotify.NotificationPagerDuty.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.streamdal.protos.SpNotify.NotificationPagerDuty.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.streamdal.protos.SpNotify.NotificationPagerDuty = _builder.build()

    /**
     * <pre>
     * Auth token
     * </pre>
     *
     * <code>string token = 1;</code>
     */
    public var token: kotlin.String
      @JvmName("getToken")
      get() = _builder.getToken()
      @JvmName("setToken")
      set(value) {
        _builder.setToken(value)
      }
    /**
     * <pre>
     * Auth token
     * </pre>
     *
     * <code>string token = 1;</code>
     */
    public fun clearToken() {
      _builder.clearToken()
    }

    /**
     * <pre>
     * Must be a valid email for a PagerDuty user
     * </pre>
     *
     * <code>string email = 2;</code>
     */
    public var email: kotlin.String
      @JvmName("getEmail")
      get() = _builder.getEmail()
      @JvmName("setEmail")
      set(value) {
        _builder.setEmail(value)
      }
    /**
     * <pre>
     * Must be a valid email for a PagerDuty user
     * </pre>
     *
     * <code>string email = 2;</code>
     */
    public fun clearEmail() {
      _builder.clearEmail()
    }

    /**
     * <pre>
     * Must be a valid PagerDuty service
     * </pre>
     *
     * <code>string service_id = 3;</code>
     */
    public var serviceId: kotlin.String
      @JvmName("getServiceId")
      get() = _builder.getServiceId()
      @JvmName("setServiceId")
      set(value) {
        _builder.setServiceId(value)
      }
    /**
     * <pre>
     * Must be a valid PagerDuty service
     * </pre>
     *
     * <code>string service_id = 3;</code>
     */
    public fun clearServiceId() {
      _builder.clearServiceId()
    }

    /**
     * <code>.protos.NotificationPagerDuty.Urgency urgency = 4;</code>
     */
    public var urgency: com.streamdal.protos.SpNotify.NotificationPagerDuty.Urgency
      @JvmName("getUrgency")
      get() = _builder.getUrgency()
      @JvmName("setUrgency")
      set(value) {
        _builder.setUrgency(value)
      }
    /**
     * <code>.protos.NotificationPagerDuty.Urgency urgency = 4;</code>
     */
    public fun clearUrgency() {
      _builder.clearUrgency()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.streamdal.protos.SpNotify.NotificationPagerDuty.copy(block: com.streamdal.protos.NotificationPagerDutyKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpNotify.NotificationPagerDuty =
  com.streamdal.protos.NotificationPagerDutyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

