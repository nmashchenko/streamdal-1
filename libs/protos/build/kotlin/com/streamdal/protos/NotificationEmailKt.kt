//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: sp_notify.proto

package com.streamdal.protos;

@kotlin.jvm.JvmName("-initializenotificationEmail")
public inline fun notificationEmail(block: com.streamdal.protos.NotificationEmailKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpNotify.NotificationEmail =
  com.streamdal.protos.NotificationEmailKt.Dsl._create(com.streamdal.protos.SpNotify.NotificationEmail.newBuilder()).apply { block() }._build()
public object NotificationEmailKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.streamdal.protos.SpNotify.NotificationEmail.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.streamdal.protos.SpNotify.NotificationEmail.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.streamdal.protos.SpNotify.NotificationEmail = _builder.build()

    /**
     * <code>.protos.NotificationEmail.Type type = 1;</code>
     */
    public var type: com.streamdal.protos.SpNotify.NotificationEmail.Type
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * <code>.protos.NotificationEmail.Type type = 1;</code>
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class RecipientsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated string recipients = 2;</code>
     * @return A list containing the recipients.
     */
    public val recipients: com.google.protobuf.kotlin.DslList<kotlin.String, RecipientsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getRecipientsList()
      )
    /**
     * <code>repeated string recipients = 2;</code>
     * @param value The recipients to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addRecipients")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, RecipientsProxy>.add(value: kotlin.String) {
      _builder.addRecipients(value)
    }
    /**
     * <code>repeated string recipients = 2;</code>
     * @param value The recipients to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignRecipients")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, RecipientsProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * <code>repeated string recipients = 2;</code>
     * @param values The recipients to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllRecipients")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, RecipientsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllRecipients(values)
    }
    /**
     * <code>repeated string recipients = 2;</code>
     * @param values The recipients to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllRecipients")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, RecipientsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * <code>repeated string recipients = 2;</code>
     * @param index The index to set the value at.
     * @param value The recipients to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setRecipients")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, RecipientsProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setRecipients(index, value)
    }/**
     * <code>repeated string recipients = 2;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearRecipients")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, RecipientsProxy>.clear() {
      _builder.clearRecipients()
    }
    /**
     * <code>string from_address = 3;</code>
     */
    public var fromAddress: kotlin.String
      @JvmName("getFromAddress")
      get() = _builder.getFromAddress()
      @JvmName("setFromAddress")
      set(value) {
        _builder.setFromAddress(value)
      }
    /**
     * <code>string from_address = 3;</code>
     */
    public fun clearFromAddress() {
      _builder.clearFromAddress()
    }

    /**
     * <code>.protos.NotificationEmailSMTP smtp = 1000;</code>
     */
    public var smtp: com.streamdal.protos.SpNotify.NotificationEmailSMTP
      @JvmName("getSmtp")
      get() = _builder.getSmtp()
      @JvmName("setSmtp")
      set(value) {
        _builder.setSmtp(value)
      }
    /**
     * <code>.protos.NotificationEmailSMTP smtp = 1000;</code>
     */
    public fun clearSmtp() {
      _builder.clearSmtp()
    }
    /**
     * <code>.protos.NotificationEmailSMTP smtp = 1000;</code>
     * @return Whether the smtp field is set.
     */
    public fun hasSmtp(): kotlin.Boolean {
      return _builder.hasSmtp()
    }

    /**
     * <code>.protos.NotificationEmailSES ses = 1001;</code>
     */
    public var ses: com.streamdal.protos.SpNotify.NotificationEmailSES
      @JvmName("getSes")
      get() = _builder.getSes()
      @JvmName("setSes")
      set(value) {
        _builder.setSes(value)
      }
    /**
     * <code>.protos.NotificationEmailSES ses = 1001;</code>
     */
    public fun clearSes() {
      _builder.clearSes()
    }
    /**
     * <code>.protos.NotificationEmailSES ses = 1001;</code>
     * @return Whether the ses field is set.
     */
    public fun hasSes(): kotlin.Boolean {
      return _builder.hasSes()
    }
    public val configCase: com.streamdal.protos.SpNotify.NotificationEmail.ConfigCase
      @JvmName("getConfigCase")
      get() = _builder.getConfigCase()

    public fun clearConfig() {
      _builder.clearConfig()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.streamdal.protos.SpNotify.NotificationEmail.copy(block: com.streamdal.protos.NotificationEmailKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpNotify.NotificationEmail =
  com.streamdal.protos.NotificationEmailKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.streamdal.protos.SpNotify.NotificationEmailOrBuilder.smtpOrNull: com.streamdal.protos.SpNotify.NotificationEmailSMTP?
  get() = if (hasSmtp()) getSmtp() else null

public val com.streamdal.protos.SpNotify.NotificationEmailOrBuilder.sesOrNull: com.streamdal.protos.SpNotify.NotificationEmailSES?
  get() = if (hasSes()) getSes() else null

