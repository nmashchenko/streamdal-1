//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: sp_pipeline.proto

package com.streamdal.protos;

@kotlin.jvm.JvmName("-initializepipeline")
public inline fun pipeline(block: com.streamdal.protos.PipelineKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpPipeline.Pipeline =
  com.streamdal.protos.PipelineKt.Dsl._create(com.streamdal.protos.SpPipeline.Pipeline.newBuilder()).apply { block() }._build()
public object PipelineKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.streamdal.protos.SpPipeline.Pipeline.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.streamdal.protos.SpPipeline.Pipeline.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.streamdal.protos.SpPipeline.Pipeline = _builder.build()

    /**
     * <pre>
     * ID should NOT be set by external gRPC client on CreatePipelineRequest - it
     * will be ignored; it _does_ need to be set on UpdatePipelineRequest.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public var id: kotlin.String
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * <pre>
     * ID should NOT be set by external gRPC client on CreatePipelineRequest - it
     * will be ignored; it _does_ need to be set on UpdatePipelineRequest.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * <pre>
     * Friendly name for the pipeline
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * <pre>
     * Friendly name for the pipeline
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class StepsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * One or more steps to execute
     * </pre>
     *
     * <code>repeated .protos.PipelineStep steps = 3;</code>
     */
     public val steps: com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpPipeline.PipelineStep, StepsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getStepsList()
      )
    /**
     * <pre>
     * One or more steps to execute
     * </pre>
     *
     * <code>repeated .protos.PipelineStep steps = 3;</code>
     * @param value The steps to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addSteps")
    public fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpPipeline.PipelineStep, StepsProxy>.add(value: com.streamdal.protos.SpPipeline.PipelineStep) {
      _builder.addSteps(value)
    }
    /**
     * <pre>
     * One or more steps to execute
     * </pre>
     *
     * <code>repeated .protos.PipelineStep steps = 3;</code>
     * @param value The steps to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignSteps")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpPipeline.PipelineStep, StepsProxy>.plusAssign(value: com.streamdal.protos.SpPipeline.PipelineStep) {
      add(value)
    }
    /**
     * <pre>
     * One or more steps to execute
     * </pre>
     *
     * <code>repeated .protos.PipelineStep steps = 3;</code>
     * @param values The steps to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllSteps")
    public fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpPipeline.PipelineStep, StepsProxy>.addAll(values: kotlin.collections.Iterable<com.streamdal.protos.SpPipeline.PipelineStep>) {
      _builder.addAllSteps(values)
    }
    /**
     * <pre>
     * One or more steps to execute
     * </pre>
     *
     * <code>repeated .protos.PipelineStep steps = 3;</code>
     * @param values The steps to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllSteps")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpPipeline.PipelineStep, StepsProxy>.plusAssign(values: kotlin.collections.Iterable<com.streamdal.protos.SpPipeline.PipelineStep>) {
      addAll(values)
    }
    /**
     * <pre>
     * One or more steps to execute
     * </pre>
     *
     * <code>repeated .protos.PipelineStep steps = 3;</code>
     * @param index The index to set the value at.
     * @param value The steps to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setSteps")
    public operator fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpPipeline.PipelineStep, StepsProxy>.set(index: kotlin.Int, value: com.streamdal.protos.SpPipeline.PipelineStep) {
      _builder.setSteps(index, value)
    }
    /**
     * <pre>
     * One or more steps to execute
     * </pre>
     *
     * <code>repeated .protos.PipelineStep steps = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearSteps")
    public fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpPipeline.PipelineStep, StepsProxy>.clear() {
      _builder.clearSteps()
    }


    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class NotificationConfigsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * Notification configs for this pipeline. Only filled out in external API responses
     * This is deprecated and the data has moved to PipelineStep
     * </pre>
     *
     * <code>repeated .protos.NotificationConfig _notification_configs = 4 [deprecated = true];</code>
     */
    @kotlin.Deprecated(message = "Field NotificationConfigs is deprecated")  public val NotificationConfigs: com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpNotify.NotificationConfig, NotificationConfigsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getNotificationConfigsList()
      )
    /**
     * <pre>
     * Notification configs for this pipeline. Only filled out in external API responses
     * This is deprecated and the data has moved to PipelineStep
     * </pre>
     *
     * <code>repeated .protos.NotificationConfig _notification_configs = 4 [deprecated = true];</code>
     * @deprecated protos.Pipeline._notification_configs is deprecated.
     *     See sp_pipeline.proto;l=35
     * @param value The notificationConfigs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addNotificationConfigs")
    public fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpNotify.NotificationConfig, NotificationConfigsProxy>.add(value: com.streamdal.protos.SpNotify.NotificationConfig) {
      _builder.addNotificationConfigs(value)
    }
    /**
     * <pre>
     * Notification configs for this pipeline. Only filled out in external API responses
     * This is deprecated and the data has moved to PipelineStep
     * </pre>
     *
     * <code>repeated .protos.NotificationConfig _notification_configs = 4 [deprecated = true];</code>
     * @deprecated protos.Pipeline._notification_configs is deprecated.
     *     See sp_pipeline.proto;l=35
     * @param value The notificationConfigs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignNotificationConfigs")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpNotify.NotificationConfig, NotificationConfigsProxy>.plusAssign(value: com.streamdal.protos.SpNotify.NotificationConfig) {
      add(value)
    }
    /**
     * <pre>
     * Notification configs for this pipeline. Only filled out in external API responses
     * This is deprecated and the data has moved to PipelineStep
     * </pre>
     *
     * <code>repeated .protos.NotificationConfig _notification_configs = 4 [deprecated = true];</code>
     * @deprecated protos.Pipeline._notification_configs is deprecated.
     *     See sp_pipeline.proto;l=35
     * @param values The notificationConfigs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllNotificationConfigs")
    public fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpNotify.NotificationConfig, NotificationConfigsProxy>.addAll(values: kotlin.collections.Iterable<com.streamdal.protos.SpNotify.NotificationConfig>) {
      _builder.addAllNotificationConfigs(values)
    }
    /**
     * <pre>
     * Notification configs for this pipeline. Only filled out in external API responses
     * This is deprecated and the data has moved to PipelineStep
     * </pre>
     *
     * <code>repeated .protos.NotificationConfig _notification_configs = 4 [deprecated = true];</code>
     * @deprecated protos.Pipeline._notification_configs is deprecated.
     *     See sp_pipeline.proto;l=35
     * @param values The notificationConfigs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllNotificationConfigs")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpNotify.NotificationConfig, NotificationConfigsProxy>.plusAssign(values: kotlin.collections.Iterable<com.streamdal.protos.SpNotify.NotificationConfig>) {
      addAll(values)
    }
    /**
     * <pre>
     * Notification configs for this pipeline. Only filled out in external API responses
     * This is deprecated and the data has moved to PipelineStep
     * </pre>
     *
     * <code>repeated .protos.NotificationConfig _notification_configs = 4 [deprecated = true];</code>
     * @deprecated protos.Pipeline._notification_configs is deprecated.
     *     See sp_pipeline.proto;l=35
     * @param index The index to set the value at.
     * @param value The notificationConfigs to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setNotificationConfigs")
    public operator fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpNotify.NotificationConfig, NotificationConfigsProxy>.set(index: kotlin.Int, value: com.streamdal.protos.SpNotify.NotificationConfig) {
      _builder.setNotificationConfigs(index, value)
    }
    /**
     * <pre>
     * Notification configs for this pipeline. Only filled out in external API responses
     * This is deprecated and the data has moved to PipelineStep
     * </pre>
     *
     * <code>repeated .protos.NotificationConfig _notification_configs = 4 [deprecated = true];</code>
     * @deprecated protos.Pipeline._notification_configs is deprecated.
     *     See sp_pipeline.proto;l=35
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearNotificationConfigs")
    public fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpNotify.NotificationConfig, NotificationConfigsProxy>.clear() {
      _builder.clearNotificationConfigs()
    }


    /**
     * <pre>
     * Indicates whether the pipeline is paused or not. Used internally by server.
     * </pre>
     *
     * <code>optional bool _paused = 1000;</code>
     */
    public var Paused: kotlin.Boolean
      @JvmName("getPaused")
      get() = _builder.getPaused()
      @JvmName("setPaused")
      set(value) {
        _builder.setPaused(value)
      }
    /**
     * <pre>
     * Indicates whether the pipeline is paused or not. Used internally by server.
     * </pre>
     *
     * <code>optional bool _paused = 1000;</code>
     */
    public fun clearPaused() {
      _builder.clearPaused()
    }
    /**
     * <pre>
     * Indicates whether the pipeline is paused or not. Used internally by server.
     * </pre>
     *
     * <code>optional bool _paused = 1000;</code>
     * @return Whether the paused field is set.
     */
    public fun hasPaused(): kotlin.Boolean {
      return _builder.hasPaused()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.streamdal.protos.SpPipeline.Pipeline.copy(block: com.streamdal.protos.PipelineKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpPipeline.Pipeline =
  com.streamdal.protos.PipelineKt.Dsl._create(this.toBuilder()).apply { block() }._build()

