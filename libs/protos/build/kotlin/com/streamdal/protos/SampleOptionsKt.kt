//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: sp_common.proto

package com.streamdal.protos;

@kotlin.jvm.JvmName("-initializesampleOptions")
public inline fun sampleOptions(block: com.streamdal.protos.SampleOptionsKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpCommon.SampleOptions =
  com.streamdal.protos.SampleOptionsKt.Dsl._create(com.streamdal.protos.SpCommon.SampleOptions.newBuilder()).apply { block() }._build()
public object SampleOptionsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.streamdal.protos.SpCommon.SampleOptions.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.streamdal.protos.SpCommon.SampleOptions.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.streamdal.protos.SpCommon.SampleOptions = _builder.build()

    /**
     * <code>uint32 sample_rate = 1;</code>
     */
    public var sampleRate: kotlin.Int
      @JvmName("getSampleRate")
      get() = _builder.getSampleRate()
      @JvmName("setSampleRate")
      set(value) {
        _builder.setSampleRate(value)
      }
    /**
     * <code>uint32 sample_rate = 1;</code>
     */
    public fun clearSampleRate() {
      _builder.clearSampleRate()
    }

    /**
     * <code>uint32 sample_interval_seconds = 2;</code>
     */
    public var sampleIntervalSeconds: kotlin.Int
      @JvmName("getSampleIntervalSeconds")
      get() = _builder.getSampleIntervalSeconds()
      @JvmName("setSampleIntervalSeconds")
      set(value) {
        _builder.setSampleIntervalSeconds(value)
      }
    /**
     * <code>uint32 sample_interval_seconds = 2;</code>
     */
    public fun clearSampleIntervalSeconds() {
      _builder.clearSampleIntervalSeconds()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.streamdal.protos.SpCommon.SampleOptions.copy(block: com.streamdal.protos.SampleOptionsKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpCommon.SampleOptions =
  com.streamdal.protos.SampleOptionsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

