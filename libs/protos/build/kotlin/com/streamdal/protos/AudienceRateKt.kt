//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: sp_common.proto

package com.streamdal.protos;

@kotlin.jvm.JvmName("-initializeaudienceRate")
public inline fun audienceRate(block: com.streamdal.protos.AudienceRateKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpCommon.AudienceRate =
  com.streamdal.protos.AudienceRateKt.Dsl._create(com.streamdal.protos.SpCommon.AudienceRate.newBuilder()).apply { block() }._build()
public object AudienceRateKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.streamdal.protos.SpCommon.AudienceRate.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.streamdal.protos.SpCommon.AudienceRate.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.streamdal.protos.SpCommon.AudienceRate = _builder.build()

    /**
     * <code>double bytes = 1;</code>
     */
    public var bytes: kotlin.Double
      @JvmName("getBytes")
      get() = _builder.getBytes()
      @JvmName("setBytes")
      set(value) {
        _builder.setBytes(value)
      }
    /**
     * <code>double bytes = 1;</code>
     */
    public fun clearBytes() {
      _builder.clearBytes()
    }

    /**
     * <code>double processed = 2;</code>
     */
    public var processed: kotlin.Double
      @JvmName("getProcessed")
      get() = _builder.getProcessed()
      @JvmName("setProcessed")
      set(value) {
        _builder.setProcessed(value)
      }
    /**
     * <code>double processed = 2;</code>
     */
    public fun clearProcessed() {
      _builder.clearProcessed()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.streamdal.protos.SpCommon.AudienceRate.copy(block: com.streamdal.protos.AudienceRateKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpCommon.AudienceRate =
  com.streamdal.protos.AudienceRateKt.Dsl._create(this.toBuilder()).apply { block() }._build()

