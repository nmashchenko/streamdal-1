//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: sp_sdk.proto

package com.streamdal.protos;

@kotlin.jvm.JvmName("-initializestepStatus")
public inline fun stepStatus(block: com.streamdal.protos.StepStatusKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpSdk.StepStatus =
  com.streamdal.protos.StepStatusKt.Dsl._create(com.streamdal.protos.SpSdk.StepStatus.newBuilder()).apply { block() }._build()
public object StepStatusKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.streamdal.protos.SpSdk.StepStatus.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.streamdal.protos.SpSdk.StepStatus.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.streamdal.protos.SpSdk.StepStatus = _builder.build()

    /**
     * <pre>
     * The name of the step
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * <pre>
     * The name of the step
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * <pre>
     * Execution outcome status of the step
     * </pre>
     *
     * <code>.protos.ExecStatus status = 2;</code>
     */
    public var status: com.streamdal.protos.SpSdk.ExecStatus
      @JvmName("getStatus")
      get() = _builder.getStatus()
      @JvmName("setStatus")
      set(value) {
        _builder.setStatus(value)
      }
    /**
     * <pre>
     * Execution outcome status of the step
     * </pre>
     *
     * <code>.protos.ExecStatus status = 2;</code>
     */
    public fun clearStatus() {
      _builder.clearStatus()
    }

    /**
     * <pre>
     * Optional message accompanying the exec status
     * </pre>
     *
     * <code>optional string status_message = 3;</code>
     */
    public var statusMessage: kotlin.String
      @JvmName("getStatusMessage")
      get() = _builder.getStatusMessage()
      @JvmName("setStatusMessage")
      set(value) {
        _builder.setStatusMessage(value)
      }
    /**
     * <pre>
     * Optional message accompanying the exec status
     * </pre>
     *
     * <code>optional string status_message = 3;</code>
     */
    public fun clearStatusMessage() {
      _builder.clearStatusMessage()
    }
    /**
     * <pre>
     * Optional message accompanying the exec status
     * </pre>
     *
     * <code>optional string status_message = 3;</code>
     * @return Whether the statusMessage field is set.
     */
    public fun hasStatusMessage(): kotlin.Boolean {
      return _builder.hasStatusMessage()
    }

    /**
     * <pre>
     * Indicates if current or all future pipelines were aborted.
     * IMPORTANT: The SDK running into an error does not automatically abort
     * current or all future pipelines - the user must define the abort conditions
     * for "on_error".
     * </pre>
     *
     * <code>.protos.AbortCondition abort_condition = 4;</code>
     */
    public var abortCondition: com.streamdal.protos.SpPipeline.AbortCondition
      @JvmName("getAbortCondition")
      get() = _builder.getAbortCondition()
      @JvmName("setAbortCondition")
      set(value) {
        _builder.setAbortCondition(value)
      }
    /**
     * <pre>
     * Indicates if current or all future pipelines were aborted.
     * IMPORTANT: The SDK running into an error does not automatically abort
     * current or all future pipelines - the user must define the abort conditions
     * for "on_error".
     * </pre>
     *
     * <code>.protos.AbortCondition abort_condition = 4;</code>
     */
    public fun clearAbortCondition() {
      _builder.clearAbortCondition()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.streamdal.protos.SpSdk.StepStatus.copy(block: com.streamdal.protos.StepStatusKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpSdk.StepStatus =
  com.streamdal.protos.StepStatusKt.Dsl._create(this.toBuilder()).apply { block() }._build()

