//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: sp_external.proto

package com.streamdal.protos;

@kotlin.jvm.JvmName("-initializecreatePipelineRequest")
public inline fun createPipelineRequest(block: com.streamdal.protos.CreatePipelineRequestKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpExternal.CreatePipelineRequest =
  com.streamdal.protos.CreatePipelineRequestKt.Dsl._create(com.streamdal.protos.SpExternal.CreatePipelineRequest.newBuilder()).apply { block() }._build()
public object CreatePipelineRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.streamdal.protos.SpExternal.CreatePipelineRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.streamdal.protos.SpExternal.CreatePipelineRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.streamdal.protos.SpExternal.CreatePipelineRequest = _builder.build()

    /**
     * <code>.protos.Pipeline pipeline = 1;</code>
     */
    public var pipeline: com.streamdal.protos.SpPipeline.Pipeline
      @JvmName("getPipeline")
      get() = _builder.getPipeline()
      @JvmName("setPipeline")
      set(value) {
        _builder.setPipeline(value)
      }
    /**
     * <code>.protos.Pipeline pipeline = 1;</code>
     */
    public fun clearPipeline() {
      _builder.clearPipeline()
    }
    /**
     * <code>.protos.Pipeline pipeline = 1;</code>
     * @return Whether the pipeline field is set.
     */
    public fun hasPipeline(): kotlin.Boolean {
      return _builder.hasPipeline()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.streamdal.protos.SpExternal.CreatePipelineRequest.copy(block: com.streamdal.protos.CreatePipelineRequestKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpExternal.CreatePipelineRequest =
  com.streamdal.protos.CreatePipelineRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.streamdal.protos.SpExternal.CreatePipelineRequestOrBuilder.pipelineOrNull: com.streamdal.protos.SpPipeline.Pipeline?
  get() = if (hasPipeline()) getPipeline() else null

