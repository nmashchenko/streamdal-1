//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: sp_pipeline.proto

package com.streamdal.protos;

@kotlin.jvm.JvmName("-initializepipelineStep")
public inline fun pipelineStep(block: com.streamdal.protos.PipelineStepKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpPipeline.PipelineStep =
  com.streamdal.protos.PipelineStepKt.Dsl._create(com.streamdal.protos.SpPipeline.PipelineStep.newBuilder()).apply { block() }._build()
public object PipelineStepKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.streamdal.protos.SpPipeline.PipelineStep.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.streamdal.protos.SpPipeline.PipelineStep.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.streamdal.protos.SpPipeline.PipelineStep = _builder.build()

    /**
     * <pre>
     * Friendly name for the step
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * <pre>
     * Friendly name for the step
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * <pre>
     * SDKs should read this when Wasm returns 'true' to determine what to do next.
     * </pre>
     *
     * <code>.protos.PipelineStepConditions on_true = 2;</code>
     */
    public var onTrue: com.streamdal.protos.SpPipeline.PipelineStepConditions
      @JvmName("getOnTrue")
      get() = _builder.getOnTrue()
      @JvmName("setOnTrue")
      set(value) {
        _builder.setOnTrue(value)
      }
    /**
     * <pre>
     * SDKs should read this when Wasm returns 'true' to determine what to do next.
     * </pre>
     *
     * <code>.protos.PipelineStepConditions on_true = 2;</code>
     */
    public fun clearOnTrue() {
      _builder.clearOnTrue()
    }
    /**
     * <pre>
     * SDKs should read this when Wasm returns 'true' to determine what to do next.
     * </pre>
     *
     * <code>.protos.PipelineStepConditions on_true = 2;</code>
     * @return Whether the onTrue field is set.
     */
    public fun hasOnTrue(): kotlin.Boolean {
      return _builder.hasOnTrue()
    }

    /**
     * <pre>
     * SDKs should read this when Wasm returns 'false' to determine what to do next.
     * </pre>
     *
     * <code>.protos.PipelineStepConditions on_false = 3;</code>
     */
    public var onFalse: com.streamdal.protos.SpPipeline.PipelineStepConditions
      @JvmName("getOnFalse")
      get() = _builder.getOnFalse()
      @JvmName("setOnFalse")
      set(value) {
        _builder.setOnFalse(value)
      }
    /**
     * <pre>
     * SDKs should read this when Wasm returns 'false' to determine what to do next.
     * </pre>
     *
     * <code>.protos.PipelineStepConditions on_false = 3;</code>
     */
    public fun clearOnFalse() {
      _builder.clearOnFalse()
    }
    /**
     * <pre>
     * SDKs should read this when Wasm returns 'false' to determine what to do next.
     * </pre>
     *
     * <code>.protos.PipelineStepConditions on_false = 3;</code>
     * @return Whether the onFalse field is set.
     */
    public fun hasOnFalse(): kotlin.Boolean {
      return _builder.hasOnFalse()
    }

    /**
     * <pre>
     * Indicates whether to use the results from a previous step as input to this step
     * </pre>
     *
     * <code>bool dynamic = 4;</code>
     */
    public var dynamic: kotlin.Boolean
      @JvmName("getDynamic")
      get() = _builder.getDynamic()
      @JvmName("setDynamic")
      set(value) {
        _builder.setDynamic(value)
      }
    /**
     * <pre>
     * Indicates whether to use the results from a previous step as input to this step
     * </pre>
     *
     * <code>bool dynamic = 4;</code>
     */
    public fun clearDynamic() {
      _builder.clearDynamic()
    }

    /**
     * <pre>
     * SDKs should read this when Wasm returns 'error' to determine what to do next.
     * </pre>
     *
     * <code>.protos.PipelineStepConditions on_error = 5;</code>
     */
    public var onError: com.streamdal.protos.SpPipeline.PipelineStepConditions
      @JvmName("getOnError")
      get() = _builder.getOnError()
      @JvmName("setOnError")
      set(value) {
        _builder.setOnError(value)
      }
    /**
     * <pre>
     * SDKs should read this when Wasm returns 'error' to determine what to do next.
     * </pre>
     *
     * <code>.protos.PipelineStepConditions on_error = 5;</code>
     */
    public fun clearOnError() {
      _builder.clearOnError()
    }
    /**
     * <pre>
     * SDKs should read this when Wasm returns 'error' to determine what to do next.
     * </pre>
     *
     * <code>.protos.PipelineStepConditions on_error = 5;</code>
     * @return Whether the onError field is set.
     */
    public fun hasOnError(): kotlin.Boolean {
      return _builder.hasOnError()
    }

    /**
     * <code>.protos.steps.DetectiveStep detective = 1000;</code>
     */
    public var detective: com.streamdal.protos.steps.SpStepsDetective.DetectiveStep
      @JvmName("getDetective")
      get() = _builder.getDetective()
      @JvmName("setDetective")
      set(value) {
        _builder.setDetective(value)
      }
    /**
     * <code>.protos.steps.DetectiveStep detective = 1000;</code>
     */
    public fun clearDetective() {
      _builder.clearDetective()
    }
    /**
     * <code>.protos.steps.DetectiveStep detective = 1000;</code>
     * @return Whether the detective field is set.
     */
    public fun hasDetective(): kotlin.Boolean {
      return _builder.hasDetective()
    }

    /**
     * <code>.protos.steps.TransformStep transform = 1001;</code>
     */
    public var transform: com.streamdal.protos.steps.SpStepsTransform.TransformStep
      @JvmName("getTransform")
      get() = _builder.getTransform()
      @JvmName("setTransform")
      set(value) {
        _builder.setTransform(value)
      }
    /**
     * <code>.protos.steps.TransformStep transform = 1001;</code>
     */
    public fun clearTransform() {
      _builder.clearTransform()
    }
    /**
     * <code>.protos.steps.TransformStep transform = 1001;</code>
     * @return Whether the transform field is set.
     */
    public fun hasTransform(): kotlin.Boolean {
      return _builder.hasTransform()
    }

    /**
     * <code>.protos.steps.EncodeStep encode = 1002;</code>
     */
    public var encode: com.streamdal.protos.steps.SpStepsEncode.EncodeStep
      @JvmName("getEncode")
      get() = _builder.getEncode()
      @JvmName("setEncode")
      set(value) {
        _builder.setEncode(value)
      }
    /**
     * <code>.protos.steps.EncodeStep encode = 1002;</code>
     */
    public fun clearEncode() {
      _builder.clearEncode()
    }
    /**
     * <code>.protos.steps.EncodeStep encode = 1002;</code>
     * @return Whether the encode field is set.
     */
    public fun hasEncode(): kotlin.Boolean {
      return _builder.hasEncode()
    }

    /**
     * <code>.protos.steps.DecodeStep decode = 1003;</code>
     */
    public var decode: com.streamdal.protos.steps.SpStepsDecode.DecodeStep
      @JvmName("getDecode")
      get() = _builder.getDecode()
      @JvmName("setDecode")
      set(value) {
        _builder.setDecode(value)
      }
    /**
     * <code>.protos.steps.DecodeStep decode = 1003;</code>
     */
    public fun clearDecode() {
      _builder.clearDecode()
    }
    /**
     * <code>.protos.steps.DecodeStep decode = 1003;</code>
     * @return Whether the decode field is set.
     */
    public fun hasDecode(): kotlin.Boolean {
      return _builder.hasDecode()
    }

    /**
     * <code>.protos.steps.CustomStep custom = 1004;</code>
     */
    public var custom: com.streamdal.protos.steps.SpStepsCustom.CustomStep
      @JvmName("getCustom")
      get() = _builder.getCustom()
      @JvmName("setCustom")
      set(value) {
        _builder.setCustom(value)
      }
    /**
     * <code>.protos.steps.CustomStep custom = 1004;</code>
     */
    public fun clearCustom() {
      _builder.clearCustom()
    }
    /**
     * <code>.protos.steps.CustomStep custom = 1004;</code>
     * @return Whether the custom field is set.
     */
    public fun hasCustom(): kotlin.Boolean {
      return _builder.hasCustom()
    }

    /**
     * <code>.protos.steps.HttpRequestStep http_request = 1005;</code>
     */
    public var httpRequest: com.streamdal.protos.steps.SpStepsHttprequest.HttpRequestStep
      @JvmName("getHttpRequest")
      get() = _builder.getHttpRequest()
      @JvmName("setHttpRequest")
      set(value) {
        _builder.setHttpRequest(value)
      }
    /**
     * <code>.protos.steps.HttpRequestStep http_request = 1005;</code>
     */
    public fun clearHttpRequest() {
      _builder.clearHttpRequest()
    }
    /**
     * <code>.protos.steps.HttpRequestStep http_request = 1005;</code>
     * @return Whether the httpRequest field is set.
     */
    public fun hasHttpRequest(): kotlin.Boolean {
      return _builder.hasHttpRequest()
    }

    /**
     * <code>.protos.steps.KVStep kv = 1006;</code>
     */
    public var kv: com.streamdal.protos.steps.SpStepsKv.KVStep
      @JvmName("getKv")
      get() = _builder.getKv()
      @JvmName("setKv")
      set(value) {
        _builder.setKv(value)
      }
    /**
     * <code>.protos.steps.KVStep kv = 1006;</code>
     */
    public fun clearKv() {
      _builder.clearKv()
    }
    /**
     * <code>.protos.steps.KVStep kv = 1006;</code>
     * @return Whether the kv field is set.
     */
    public fun hasKv(): kotlin.Boolean {
      return _builder.hasKv()
    }

    /**
     * <code>.protos.steps.InferSchemaStep infer_schema = 1007;</code>
     */
    public var inferSchema: com.streamdal.protos.steps.SpStepsInferschema.InferSchemaStep
      @JvmName("getInferSchema")
      get() = _builder.getInferSchema()
      @JvmName("setInferSchema")
      set(value) {
        _builder.setInferSchema(value)
      }
    /**
     * <code>.protos.steps.InferSchemaStep infer_schema = 1007;</code>
     */
    public fun clearInferSchema() {
      _builder.clearInferSchema()
    }
    /**
     * <code>.protos.steps.InferSchemaStep infer_schema = 1007;</code>
     * @return Whether the inferSchema field is set.
     */
    public fun hasInferSchema(): kotlin.Boolean {
      return _builder.hasInferSchema()
    }

    /**
     * <code>.protos.steps.ValidJSONStep valid_json = 1008;</code>
     */
    public var validJson: com.streamdal.protos.steps.SpStepsValidJson.ValidJSONStep
      @JvmName("getValidJson")
      get() = _builder.getValidJson()
      @JvmName("setValidJson")
      set(value) {
        _builder.setValidJson(value)
      }
    /**
     * <code>.protos.steps.ValidJSONStep valid_json = 1008;</code>
     */
    public fun clearValidJson() {
      _builder.clearValidJson()
    }
    /**
     * <code>.protos.steps.ValidJSONStep valid_json = 1008;</code>
     * @return Whether the validJson field is set.
     */
    public fun hasValidJson(): kotlin.Boolean {
      return _builder.hasValidJson()
    }

    /**
     * <code>.protos.steps.SchemaValidationStep schema_validation = 1009;</code>
     */
    public var schemaValidation: com.streamdal.protos.steps.SpStepsSchemaValidation.SchemaValidationStep
      @JvmName("getSchemaValidation")
      get() = _builder.getSchemaValidation()
      @JvmName("setSchemaValidation")
      set(value) {
        _builder.setSchemaValidation(value)
      }
    /**
     * <code>.protos.steps.SchemaValidationStep schema_validation = 1009;</code>
     */
    public fun clearSchemaValidation() {
      _builder.clearSchemaValidation()
    }
    /**
     * <code>.protos.steps.SchemaValidationStep schema_validation = 1009;</code>
     * @return Whether the schemaValidation field is set.
     */
    public fun hasSchemaValidation(): kotlin.Boolean {
      return _builder.hasSchemaValidation()
    }

    /**
     * <pre>
     * ID is a uuid(sha256(_wasm_bytes)) that is set by server
     * </pre>
     *
     * <code>optional string _wasm_id = 10000;</code>
     */
    public var WasmId: kotlin.String
      @JvmName("getWasmId")
      get() = _builder.getWasmId()
      @JvmName("setWasmId")
      set(value) {
        _builder.setWasmId(value)
      }
    /**
     * <pre>
     * ID is a uuid(sha256(_wasm_bytes)) that is set by server
     * </pre>
     *
     * <code>optional string _wasm_id = 10000;</code>
     */
    public fun clearWasmId() {
      _builder.clearWasmId()
    }
    /**
     * <pre>
     * ID is a uuid(sha256(_wasm_bytes)) that is set by server
     * </pre>
     *
     * <code>optional string _wasm_id = 10000;</code>
     * @return Whether the wasmId field is set.
     */
    public fun hasWasmId(): kotlin.Boolean {
      return _builder.hasWasmId()
    }

    /**
     * <pre>
     * WASM module bytes (set by server)
     * </pre>
     *
     * <code>optional bytes _wasm_bytes = 10001;</code>
     */
    public var WasmBytes: com.google.protobuf.ByteString
      @JvmName("getWasmBytes")
      get() = _builder.getWasmBytes()
      @JvmName("setWasmBytes")
      set(value) {
        _builder.setWasmBytes(value)
      }
    /**
     * <pre>
     * WASM module bytes (set by server)
     * </pre>
     *
     * <code>optional bytes _wasm_bytes = 10001;</code>
     */
    public fun clearWasmBytes() {
      _builder.clearWasmBytes()
    }
    /**
     * <pre>
     * WASM module bytes (set by server)
     * </pre>
     *
     * <code>optional bytes _wasm_bytes = 10001;</code>
     * @return Whether the wasmBytes field is set.
     */
    public fun hasWasmBytes(): kotlin.Boolean {
      return _builder.hasWasmBytes()
    }

    /**
     * <pre>
     * WASM function name to execute (set by server)
     * </pre>
     *
     * <code>optional string _wasm_function = 10002;</code>
     */
    public var WasmFunction: kotlin.String
      @JvmName("getWasmFunction")
      get() = _builder.getWasmFunction()
      @JvmName("setWasmFunction")
      set(value) {
        _builder.setWasmFunction(value)
      }
    /**
     * <pre>
     * WASM function name to execute (set by server)
     * </pre>
     *
     * <code>optional string _wasm_function = 10002;</code>
     */
    public fun clearWasmFunction() {
      _builder.clearWasmFunction()
    }
    /**
     * <pre>
     * WASM function name to execute (set by server)
     * </pre>
     *
     * <code>optional string _wasm_function = 10002;</code>
     * @return Whether the wasmFunction field is set.
     */
    public fun hasWasmFunction(): kotlin.Boolean {
      return _builder.hasWasmFunction()
    }
    public val stepCase: com.streamdal.protos.SpPipeline.PipelineStep.StepCase
      @JvmName("getStepCase")
      get() = _builder.getStepCase()

    public fun clearStep() {
      _builder.clearStep()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.streamdal.protos.SpPipeline.PipelineStep.copy(block: com.streamdal.protos.PipelineStepKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpPipeline.PipelineStep =
  com.streamdal.protos.PipelineStepKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.streamdal.protos.SpPipeline.PipelineStepOrBuilder.onTrueOrNull: com.streamdal.protos.SpPipeline.PipelineStepConditions?
  get() = if (hasOnTrue()) getOnTrue() else null

public val com.streamdal.protos.SpPipeline.PipelineStepOrBuilder.onFalseOrNull: com.streamdal.protos.SpPipeline.PipelineStepConditions?
  get() = if (hasOnFalse()) getOnFalse() else null

public val com.streamdal.protos.SpPipeline.PipelineStepOrBuilder.onErrorOrNull: com.streamdal.protos.SpPipeline.PipelineStepConditions?
  get() = if (hasOnError()) getOnError() else null

public val com.streamdal.protos.SpPipeline.PipelineStepOrBuilder.detectiveOrNull: com.streamdal.protos.steps.SpStepsDetective.DetectiveStep?
  get() = if (hasDetective()) getDetective() else null

public val com.streamdal.protos.SpPipeline.PipelineStepOrBuilder.transformOrNull: com.streamdal.protos.steps.SpStepsTransform.TransformStep?
  get() = if (hasTransform()) getTransform() else null

public val com.streamdal.protos.SpPipeline.PipelineStepOrBuilder.encodeOrNull: com.streamdal.protos.steps.SpStepsEncode.EncodeStep?
  get() = if (hasEncode()) getEncode() else null

public val com.streamdal.protos.SpPipeline.PipelineStepOrBuilder.decodeOrNull: com.streamdal.protos.steps.SpStepsDecode.DecodeStep?
  get() = if (hasDecode()) getDecode() else null

public val com.streamdal.protos.SpPipeline.PipelineStepOrBuilder.customOrNull: com.streamdal.protos.steps.SpStepsCustom.CustomStep?
  get() = if (hasCustom()) getCustom() else null

public val com.streamdal.protos.SpPipeline.PipelineStepOrBuilder.httpRequestOrNull: com.streamdal.protos.steps.SpStepsHttprequest.HttpRequestStep?
  get() = if (hasHttpRequest()) getHttpRequest() else null

public val com.streamdal.protos.SpPipeline.PipelineStepOrBuilder.kvOrNull: com.streamdal.protos.steps.SpStepsKv.KVStep?
  get() = if (hasKv()) getKv() else null

public val com.streamdal.protos.SpPipeline.PipelineStepOrBuilder.inferSchemaOrNull: com.streamdal.protos.steps.SpStepsInferschema.InferSchemaStep?
  get() = if (hasInferSchema()) getInferSchema() else null

public val com.streamdal.protos.SpPipeline.PipelineStepOrBuilder.validJsonOrNull: com.streamdal.protos.steps.SpStepsValidJson.ValidJSONStep?
  get() = if (hasValidJson()) getValidJson() else null

public val com.streamdal.protos.SpPipeline.PipelineStepOrBuilder.schemaValidationOrNull: com.streamdal.protos.steps.SpStepsSchemaValidation.SchemaValidationStep?
  get() = if (hasSchemaValidation()) getSchemaValidation() else null

