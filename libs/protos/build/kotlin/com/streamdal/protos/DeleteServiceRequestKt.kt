//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: sp_external.proto

package com.streamdal.protos;

@kotlin.jvm.JvmName("-initializedeleteServiceRequest")
public inline fun deleteServiceRequest(block: com.streamdal.protos.DeleteServiceRequestKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpExternal.DeleteServiceRequest =
  com.streamdal.protos.DeleteServiceRequestKt.Dsl._create(com.streamdal.protos.SpExternal.DeleteServiceRequest.newBuilder()).apply { block() }._build()
public object DeleteServiceRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.streamdal.protos.SpExternal.DeleteServiceRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.streamdal.protos.SpExternal.DeleteServiceRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.streamdal.protos.SpExternal.DeleteServiceRequest = _builder.build()

    /**
     * <code>string service_name = 1;</code>
     */
    public var serviceName: kotlin.String
      @JvmName("getServiceName")
      get() = _builder.getServiceName()
      @JvmName("setServiceName")
      set(value) {
        _builder.setServiceName(value)
      }
    /**
     * <code>string service_name = 1;</code>
     */
    public fun clearServiceName() {
      _builder.clearServiceName()
    }

    /**
     * <code>optional bool force = 2;</code>
     */
    public var force: kotlin.Boolean
      @JvmName("getForce")
      get() = _builder.getForce()
      @JvmName("setForce")
      set(value) {
        _builder.setForce(value)
      }
    /**
     * <code>optional bool force = 2;</code>
     */
    public fun clearForce() {
      _builder.clearForce()
    }
    /**
     * <code>optional bool force = 2;</code>
     * @return Whether the force field is set.
     */
    public fun hasForce(): kotlin.Boolean {
      return _builder.hasForce()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.streamdal.protos.SpExternal.DeleteServiceRequest.copy(block: com.streamdal.protos.DeleteServiceRequestKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpExternal.DeleteServiceRequest =
  com.streamdal.protos.DeleteServiceRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

