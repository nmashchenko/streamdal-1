//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: sp_common.proto

package com.streamdal.protos;

@kotlin.jvm.JvmName("-initializetailResponse")
public inline fun tailResponse(block: com.streamdal.protos.TailResponseKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpCommon.TailResponse =
  com.streamdal.protos.TailResponseKt.Dsl._create(com.streamdal.protos.SpCommon.TailResponse.newBuilder()).apply { block() }._build()
public object TailResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.streamdal.protos.SpCommon.TailResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.streamdal.protos.SpCommon.TailResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.streamdal.protos.SpCommon.TailResponse = _builder.build()

    /**
     * <code>.protos.TailResponseType type = 1;</code>
     */
    public var type: com.streamdal.protos.SpCommon.TailResponseType
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * <code>.protos.TailResponseType type = 1;</code>
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * <code>string tail_request_id = 2;</code>
     */
    public var tailRequestId: kotlin.String
      @JvmName("getTailRequestId")
      get() = _builder.getTailRequestId()
      @JvmName("setTailRequestId")
      set(value) {
        _builder.setTailRequestId(value)
      }
    /**
     * <code>string tail_request_id = 2;</code>
     */
    public fun clearTailRequestId() {
      _builder.clearTailRequestId()
    }

    /**
     * <code>.protos.Audience audience = 3;</code>
     */
    public var audience: com.streamdal.protos.SpCommon.Audience
      @JvmName("getAudience")
      get() = _builder.getAudience()
      @JvmName("setAudience")
      set(value) {
        _builder.setAudience(value)
      }
    /**
     * <code>.protos.Audience audience = 3;</code>
     */
    public fun clearAudience() {
      _builder.clearAudience()
    }
    /**
     * <code>.protos.Audience audience = 3;</code>
     * @return Whether the audience field is set.
     */
    public fun hasAudience(): kotlin.Boolean {
      return _builder.hasAudience()
    }

    /**
     * <code>string pipeline_id = 4;</code>
     */
    public var pipelineId: kotlin.String
      @JvmName("getPipelineId")
      get() = _builder.getPipelineId()
      @JvmName("setPipelineId")
      set(value) {
        _builder.setPipelineId(value)
      }
    /**
     * <code>string pipeline_id = 4;</code>
     */
    public fun clearPipelineId() {
      _builder.clearPipelineId()
    }

    /**
     * <code>string session_id = 5;</code>
     */
    public var sessionId: kotlin.String
      @JvmName("getSessionId")
      get() = _builder.getSessionId()
      @JvmName("setSessionId")
      set(value) {
        _builder.setSessionId(value)
      }
    /**
     * <code>string session_id = 5;</code>
     */
    public fun clearSessionId() {
      _builder.clearSessionId()
    }

    /**
     * <pre>
     * Timestamp in nanoseconds
     * </pre>
     *
     * <code>int64 timestamp_ns = 6;</code>
     */
    public var timestampNs: kotlin.Long
      @JvmName("getTimestampNs")
      get() = _builder.getTimestampNs()
      @JvmName("setTimestampNs")
      set(value) {
        _builder.setTimestampNs(value)
      }
    /**
     * <pre>
     * Timestamp in nanoseconds
     * </pre>
     *
     * <code>int64 timestamp_ns = 6;</code>
     */
    public fun clearTimestampNs() {
      _builder.clearTimestampNs()
    }

    /**
     * <pre>
     * Payload data. For errors, this will be the error message
     * For payloads, this will be JSON of the payload data, post processing
     * </pre>
     *
     * <code>bytes original_data = 7;</code>
     */
    public var originalData: com.google.protobuf.ByteString
      @JvmName("getOriginalData")
      get() = _builder.getOriginalData()
      @JvmName("setOriginalData")
      set(value) {
        _builder.setOriginalData(value)
      }
    /**
     * <pre>
     * Payload data. For errors, this will be the error message
     * For payloads, this will be JSON of the payload data, post processing
     * </pre>
     *
     * <code>bytes original_data = 7;</code>
     */
    public fun clearOriginalData() {
      _builder.clearOriginalData()
    }

    /**
     * <pre>
     * For payloads, this will be the new data, post processing
     * </pre>
     *
     * <code>bytes new_data = 8;</code>
     */
    public var newData: com.google.protobuf.ByteString
      @JvmName("getNewData")
      get() = _builder.getNewData()
      @JvmName("setNewData")
      set(value) {
        _builder.setNewData(value)
      }
    /**
     * <pre>
     * For payloads, this will be the new data, post processing
     * </pre>
     *
     * <code>bytes new_data = 8;</code>
     */
    public fun clearNewData() {
      _builder.clearNewData()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class MetadataProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * protolint:disable:this FIELD_NAMES_LOWER_SNAKE_CASE
     * </pre>
     *
     * <code>map&lt;string, string&gt; _metadata = 1000;</code>
     */
     public val Metadata: com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, MetadataProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getMetadataMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getMetadataMap()
      )
    /**
     * <pre>
     * protolint:disable:this FIELD_NAMES_LOWER_SNAKE_CASE
     * </pre>
     *
     * <code>map&lt;string, string&gt; _metadata = 1000;</code>
     */
    @JvmName("putMetadata")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, MetadataProxy>
      .put(key: kotlin.String, value: kotlin.String) {
         _builder.putMetadata(key, value)
       }
    /**
     * <pre>
     * protolint:disable:this FIELD_NAMES_LOWER_SNAKE_CASE
     * </pre>
     *
     * <code>map&lt;string, string&gt; _metadata = 1000;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setMetadata")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, MetadataProxy>
      .set(key: kotlin.String, value: kotlin.String) {
         put(key, value)
       }
    /**
     * <pre>
     * protolint:disable:this FIELD_NAMES_LOWER_SNAKE_CASE
     * </pre>
     *
     * <code>map&lt;string, string&gt; _metadata = 1000;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeMetadata")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, MetadataProxy>
      .remove(key: kotlin.String) {
         _builder.removeMetadata(key)
       }
    /**
     * <pre>
     * protolint:disable:this FIELD_NAMES_LOWER_SNAKE_CASE
     * </pre>
     *
     * <code>map&lt;string, string&gt; _metadata = 1000;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllMetadata")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, MetadataProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, kotlin.String>) {
         _builder.putAllMetadata(map)
       }
    /**
     * <pre>
     * protolint:disable:this FIELD_NAMES_LOWER_SNAKE_CASE
     * </pre>
     *
     * <code>map&lt;string, string&gt; _metadata = 1000;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearMetadata")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, MetadataProxy>
      .clear() {
         _builder.clearMetadata()
       }

    /**
     * <pre>
     * Set by server to indicate that the response is a keepalive message
     * </pre>
     *
     * <code>optional bool _keepalive = 1001;</code>
     */
    public var Keepalive: kotlin.Boolean
      @JvmName("getKeepalive")
      get() = _builder.getKeepalive()
      @JvmName("setKeepalive")
      set(value) {
        _builder.setKeepalive(value)
      }
    /**
     * <pre>
     * Set by server to indicate that the response is a keepalive message
     * </pre>
     *
     * <code>optional bool _keepalive = 1001;</code>
     */
    public fun clearKeepalive() {
      _builder.clearKeepalive()
    }
    /**
     * <pre>
     * Set by server to indicate that the response is a keepalive message
     * </pre>
     *
     * <code>optional bool _keepalive = 1001;</code>
     * @return Whether the keepalive field is set.
     */
    public fun hasKeepalive(): kotlin.Boolean {
      return _builder.hasKeepalive()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.streamdal.protos.SpCommon.TailResponse.copy(block: com.streamdal.protos.TailResponseKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpCommon.TailResponse =
  com.streamdal.protos.TailResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.streamdal.protos.SpCommon.TailResponseOrBuilder.audienceOrNull: com.streamdal.protos.SpCommon.Audience?
  get() = if (hasAudience()) getAudience() else null

