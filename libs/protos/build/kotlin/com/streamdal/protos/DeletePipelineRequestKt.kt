//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: sp_external.proto

package com.streamdal.protos;

@kotlin.jvm.JvmName("-initializedeletePipelineRequest")
public inline fun deletePipelineRequest(block: com.streamdal.protos.DeletePipelineRequestKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpExternal.DeletePipelineRequest =
  com.streamdal.protos.DeletePipelineRequestKt.Dsl._create(com.streamdal.protos.SpExternal.DeletePipelineRequest.newBuilder()).apply { block() }._build()
public object DeletePipelineRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.streamdal.protos.SpExternal.DeletePipelineRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.streamdal.protos.SpExternal.DeletePipelineRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.streamdal.protos.SpExternal.DeletePipelineRequest = _builder.build()

    /**
     * <code>string pipeline_id = 1;</code>
     */
    public var pipelineId: kotlin.String
      @JvmName("getPipelineId")
      get() = _builder.getPipelineId()
      @JvmName("setPipelineId")
      set(value) {
        _builder.setPipelineId(value)
      }
    /**
     * <code>string pipeline_id = 1;</code>
     */
    public fun clearPipelineId() {
      _builder.clearPipelineId()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class AudiencesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * This field is for internal usage only by the server. It is used to indicate
     * to the bus handler who this pipeline was used by so the handler can decide
     * who we need to emit a SetPipelines cmd to.
     * </pre>
     *
     * <code>repeated .protos.Audience _audiences = 1000;</code>
     */
     public val Audiences: com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpCommon.Audience, AudiencesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getAudiencesList()
      )
    /**
     * <pre>
     * This field is for internal usage only by the server. It is used to indicate
     * to the bus handler who this pipeline was used by so the handler can decide
     * who we need to emit a SetPipelines cmd to.
     * </pre>
     *
     * <code>repeated .protos.Audience _audiences = 1000;</code>
     * @param value The audiences to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAudiences")
    public fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpCommon.Audience, AudiencesProxy>.add(value: com.streamdal.protos.SpCommon.Audience) {
      _builder.addAudiences(value)
    }
    /**
     * <pre>
     * This field is for internal usage only by the server. It is used to indicate
     * to the bus handler who this pipeline was used by so the handler can decide
     * who we need to emit a SetPipelines cmd to.
     * </pre>
     *
     * <code>repeated .protos.Audience _audiences = 1000;</code>
     * @param value The audiences to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAudiences")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpCommon.Audience, AudiencesProxy>.plusAssign(value: com.streamdal.protos.SpCommon.Audience) {
      add(value)
    }
    /**
     * <pre>
     * This field is for internal usage only by the server. It is used to indicate
     * to the bus handler who this pipeline was used by so the handler can decide
     * who we need to emit a SetPipelines cmd to.
     * </pre>
     *
     * <code>repeated .protos.Audience _audiences = 1000;</code>
     * @param values The audiences to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllAudiences")
    public fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpCommon.Audience, AudiencesProxy>.addAll(values: kotlin.collections.Iterable<com.streamdal.protos.SpCommon.Audience>) {
      _builder.addAllAudiences(values)
    }
    /**
     * <pre>
     * This field is for internal usage only by the server. It is used to indicate
     * to the bus handler who this pipeline was used by so the handler can decide
     * who we need to emit a SetPipelines cmd to.
     * </pre>
     *
     * <code>repeated .protos.Audience _audiences = 1000;</code>
     * @param values The audiences to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllAudiences")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpCommon.Audience, AudiencesProxy>.plusAssign(values: kotlin.collections.Iterable<com.streamdal.protos.SpCommon.Audience>) {
      addAll(values)
    }
    /**
     * <pre>
     * This field is for internal usage only by the server. It is used to indicate
     * to the bus handler who this pipeline was used by so the handler can decide
     * who we need to emit a SetPipelines cmd to.
     * </pre>
     *
     * <code>repeated .protos.Audience _audiences = 1000;</code>
     * @param index The index to set the value at.
     * @param value The audiences to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setAudiences")
    public operator fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpCommon.Audience, AudiencesProxy>.set(index: kotlin.Int, value: com.streamdal.protos.SpCommon.Audience) {
      _builder.setAudiences(index, value)
    }
    /**
     * <pre>
     * This field is for internal usage only by the server. It is used to indicate
     * to the bus handler who this pipeline was used by so the handler can decide
     * who we need to emit a SetPipelines cmd to.
     * </pre>
     *
     * <code>repeated .protos.Audience _audiences = 1000;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearAudiences")
    public fun com.google.protobuf.kotlin.DslList<com.streamdal.protos.SpCommon.Audience, AudiencesProxy>.clear() {
      _builder.clearAudiences()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.streamdal.protos.SpExternal.DeletePipelineRequest.copy(block: com.streamdal.protos.DeletePipelineRequestKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpExternal.DeletePipelineRequest =
  com.streamdal.protos.DeletePipelineRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

