//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: sp_external.proto

package com.streamdal.protos;

@kotlin.jvm.JvmName("-initializeappRegisterRejectRequest")
public inline fun appRegisterRejectRequest(block: com.streamdal.protos.AppRegisterRejectRequestKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpExternal.AppRegisterRejectRequest =
  com.streamdal.protos.AppRegisterRejectRequestKt.Dsl._create(com.streamdal.protos.SpExternal.AppRegisterRejectRequest.newBuilder()).apply { block() }._build()
public object AppRegisterRejectRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.streamdal.protos.SpExternal.AppRegisterRejectRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.streamdal.protos.SpExternal.AppRegisterRejectRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.streamdal.protos.SpExternal.AppRegisterRejectRequest = _builder.build()

    /**
     * <code>string cluster_id = 1;</code>
     */
    public var clusterId: kotlin.String
      @JvmName("getClusterId")
      get() = _builder.getClusterId()
      @JvmName("setClusterId")
      set(value) {
        _builder.setClusterId(value)
      }
    /**
     * <code>string cluster_id = 1;</code>
     */
    public fun clearClusterId() {
      _builder.clearClusterId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.streamdal.protos.SpExternal.AppRegisterRejectRequest.copy(block: com.streamdal.protos.AppRegisterRejectRequestKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpExternal.AppRegisterRejectRequest =
  com.streamdal.protos.AppRegisterRejectRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

