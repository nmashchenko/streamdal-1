//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: sp_internal.proto

package com.streamdal.protos;

@kotlin.jvm.JvmName("-initializesendSchemaRequest")
public inline fun sendSchemaRequest(block: com.streamdal.protos.SendSchemaRequestKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpInternal.SendSchemaRequest =
  com.streamdal.protos.SendSchemaRequestKt.Dsl._create(com.streamdal.protos.SpInternal.SendSchemaRequest.newBuilder()).apply { block() }._build()
public object SendSchemaRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.streamdal.protos.SpInternal.SendSchemaRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.streamdal.protos.SpInternal.SendSchemaRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.streamdal.protos.SpInternal.SendSchemaRequest = _builder.build()

    /**
     * <code>.protos.Audience audience = 1;</code>
     */
    public var audience: com.streamdal.protos.SpCommon.Audience
      @JvmName("getAudience")
      get() = _builder.getAudience()
      @JvmName("setAudience")
      set(value) {
        _builder.setAudience(value)
      }
    /**
     * <code>.protos.Audience audience = 1;</code>
     */
    public fun clearAudience() {
      _builder.clearAudience()
    }
    /**
     * <code>.protos.Audience audience = 1;</code>
     * @return Whether the audience field is set.
     */
    public fun hasAudience(): kotlin.Boolean {
      return _builder.hasAudience()
    }

    /**
     * <code>.protos.Schema schema = 2;</code>
     */
    public var schema: com.streamdal.protos.SpCommon.Schema
      @JvmName("getSchema")
      get() = _builder.getSchema()
      @JvmName("setSchema")
      set(value) {
        _builder.setSchema(value)
      }
    /**
     * <code>.protos.Schema schema = 2;</code>
     */
    public fun clearSchema() {
      _builder.clearSchema()
    }
    /**
     * <code>.protos.Schema schema = 2;</code>
     * @return Whether the schema field is set.
     */
    public fun hasSchema(): kotlin.Boolean {
      return _builder.hasSchema()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.streamdal.protos.SpInternal.SendSchemaRequest.copy(block: com.streamdal.protos.SendSchemaRequestKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpInternal.SendSchemaRequest =
  com.streamdal.protos.SendSchemaRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.streamdal.protos.SpInternal.SendSchemaRequestOrBuilder.audienceOrNull: com.streamdal.protos.SpCommon.Audience?
  get() = if (hasAudience()) getAudience() else null

public val com.streamdal.protos.SpInternal.SendSchemaRequestOrBuilder.schemaOrNull: com.streamdal.protos.SpCommon.Schema?
  get() = if (hasSchema()) getSchema() else null

