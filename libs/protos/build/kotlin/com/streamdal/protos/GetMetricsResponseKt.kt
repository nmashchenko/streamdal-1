//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: sp_external.proto

package com.streamdal.protos;

@kotlin.jvm.JvmName("-initializegetMetricsResponse")
public inline fun getMetricsResponse(block: com.streamdal.protos.GetMetricsResponseKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpExternal.GetMetricsResponse =
  com.streamdal.protos.GetMetricsResponseKt.Dsl._create(com.streamdal.protos.SpExternal.GetMetricsResponse.newBuilder()).apply { block() }._build()
public object GetMetricsResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.streamdal.protos.SpExternal.GetMetricsResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.streamdal.protos.SpExternal.GetMetricsResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.streamdal.protos.SpExternal.GetMetricsResponse = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class MetricsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>map&lt;string, .protos.Metric&gt; metrics = 1;</code>
     */
     public val metrics: com.google.protobuf.kotlin.DslMap<kotlin.String, com.streamdal.protos.SpCommon.Metric, MetricsProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getMetricsMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getMetricsMap()
      )
    /**
     * <code>map&lt;string, .protos.Metric&gt; metrics = 1;</code>
     */
    @JvmName("putMetrics")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.streamdal.protos.SpCommon.Metric, MetricsProxy>
      .put(key: kotlin.String, value: com.streamdal.protos.SpCommon.Metric) {
         _builder.putMetrics(key, value)
       }
    /**
     * <code>map&lt;string, .protos.Metric&gt; metrics = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setMetrics")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.streamdal.protos.SpCommon.Metric, MetricsProxy>
      .set(key: kotlin.String, value: com.streamdal.protos.SpCommon.Metric) {
         put(key, value)
       }
    /**
     * <code>map&lt;string, .protos.Metric&gt; metrics = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeMetrics")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.streamdal.protos.SpCommon.Metric, MetricsProxy>
      .remove(key: kotlin.String) {
         _builder.removeMetrics(key)
       }
    /**
     * <code>map&lt;string, .protos.Metric&gt; metrics = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllMetrics")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.streamdal.protos.SpCommon.Metric, MetricsProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, com.streamdal.protos.SpCommon.Metric>) {
         _builder.putAllMetrics(map)
       }
    /**
     * <code>map&lt;string, .protos.Metric&gt; metrics = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearMetrics")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.streamdal.protos.SpCommon.Metric, MetricsProxy>
      .clear() {
         _builder.clearMetrics()
       }

    /**
     * <pre>
     * Set by server to indicate that the response is a keepalive message
     * </pre>
     *
     * <code>optional bool _keepalive = 1000;</code>
     */
    public var Keepalive: kotlin.Boolean
      @JvmName("getKeepalive")
      get() = _builder.getKeepalive()
      @JvmName("setKeepalive")
      set(value) {
        _builder.setKeepalive(value)
      }
    /**
     * <pre>
     * Set by server to indicate that the response is a keepalive message
     * </pre>
     *
     * <code>optional bool _keepalive = 1000;</code>
     */
    public fun clearKeepalive() {
      _builder.clearKeepalive()
    }
    /**
     * <pre>
     * Set by server to indicate that the response is a keepalive message
     * </pre>
     *
     * <code>optional bool _keepalive = 1000;</code>
     * @return Whether the keepalive field is set.
     */
    public fun hasKeepalive(): kotlin.Boolean {
      return _builder.hasKeepalive()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.streamdal.protos.SpExternal.GetMetricsResponse.copy(block: com.streamdal.protos.GetMetricsResponseKt.Dsl.() -> kotlin.Unit): com.streamdal.protos.SpExternal.GetMetricsResponse =
  com.streamdal.protos.GetMetricsResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

