syntax = "proto3";

package protos;

import "sp_pipeline.proto";

option go_package = "github.com/streamdal/streamdal/libs/protos/build/go/protos";
option ruby_package = "Streamdal::Protos";

enum ExecStatus {
  // Unset status. This should never be returned by the SDK. If it does, it is
  // probably a bug (and you should file an issue)
  EXEC_STATUS_UNSET = 0;

  // Indicates that the step execution evaluated to "true"
  EXEC_STATUS_TRUE = 1;

  // Indicates that the step execution evaluated to "false"
  EXEC_STATUS_FALSE = 2;

  // Indicates that the SDK encountered an error while trying to process the
  // request. Example error cases: SDK can't find the appropriate Wasm module,
  // Wasm function cannot alloc or dealloc memory, etc.
  EXEC_STATUS_ERROR = 3;
}

// Common return response used by all SDKs
message SDKResponse {
  // Contains (potentially) modified input data
  bytes data = 1;

  // Execution status of the last step
  ExecStatus status = 2;

  // Optional message accompanying the exec status for the last step
  optional string status_message = 3;

  // An array of pipelines that the SDK executed and the status of each step
  repeated PipelineStatus pipeline_status = 4;

  // Includes any metadata that the step(s) may want to pass back to the user.
  //
  // NOTE: Metadata is aggregated across all steps in the pipeline, so if two
  // steps both set a key "foo" to different values, the value of "foo" in the
  // response will be the value set by the last step in the pipeline.
  //
  // To learn more about "metadata", see SDK Spec V2 doc "Pipeline Step & Error
  // Behavior" section.
  map<string, string> metadata = 5;
}

message PipelineStatus {
  // ID of the pipeline
  string id = 1;

  // The name of the pipeline
  string name = 2;

  // The status of each step in the pipeline
  repeated StepStatus step_status = 3;
}

message StepStatus {
  // The name of the step
  string name = 1;

  // Execution outcome status of the step
  ExecStatus status = 2;

  // Optional message accompanying the exec status
  optional string status_message = 3;

  // Indicates if current or all future pipelines were aborted.
  //
  // IMPORTANT: The SDK running into an error does not automatically abort
  // current or all future pipelines - the user must define the abort conditions
  // for "on_error".
  AbortCondition abort_condition = 4;
}
